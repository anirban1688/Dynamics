(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Wolfram 14.1' *)

(*************************************************************************)
(*                                                                       *)
(*                                                                       *)
(*  This file was created under the Wolfram Enterprise licensing terms.  *)
(*                                                                       *)
(*       For additional information concerning CDF licensing see:        *)
(*                                                                       *)
(*        www.wolfram.com/cdf/adopting-cdf/licensing-options.html        *)
(*                                                                       *)
(*                                                                       *)
(*                                                                       *)
(*************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1060,         20]
NotebookDataLength[    414448,       8151]
NotebookOptionsPosition[    410435,       8081]
NotebookOutlinePosition[    410905,       8099]
CellTagsIndexPosition[    410862,       8096]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"user", " ", "defined", " ", "varibles"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"geomparams", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"l1", "->", "0.5"}], ",", 
       RowBox[{"l2", "->", "0.4"}], ",", 
       RowBox[{"b1", "->", "0.05"}], ",", 
       RowBox[{"b2", "->", "0.05"}], ",", 
       RowBox[{"g", "->", "9.81"}], ",", 
       RowBox[{"m1", "->", "0.023"}], ",", 
       RowBox[{"m2", "->", "0.025"}], ",", 
       RowBox[{"m3", "->", "0.01"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"actuation", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1", "->", 
        RowBox[{"\[Pi]", "/", "4"}]}], ",", 
       RowBox[{"\[Theta]2", "->", 
        RowBox[{"\[Pi]", "/", "6"}]}], ",", 
       RowBox[{"d3", "->", "0.3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Forward", " ", "Kinematics"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Ta", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "a"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T\[Alpha]", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}], ",", 
         RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Td", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T\[Theta]", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0", ",", "0"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"Td", ".", "T\[Theta]", ".", "Ta", ".", "T\[Alpha]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"DHTable", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"l1", ",", "0", ",", "b1", ",", "\[Theta]1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", "0", ",", "b2", ",", "\[Theta]2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "d3", ",", "0"}], "}"}]}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1", "=", 
     RowBox[{"T", "/.", 
      RowBox[{"Inner", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "\[Alpha]", ",", "d", ",", "\[Theta]"}], "}"}], 
        ",", 
        RowBox[{"DHTable", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "List"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2", "=", 
     RowBox[{"T", "/.", 
      RowBox[{"Inner", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "\[Alpha]", ",", "d", ",", "\[Theta]"}], "}"}], 
        ",", 
        RowBox[{"DHTable", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "List"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T3", "=", 
     RowBox[{"T", "/.", 
      RowBox[{"Inner", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "\[Alpha]", ",", "d", ",", "\[Theta]"}], "}"}], 
        ",", 
        RowBox[{"DHTable", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", "List"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Teff", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"T1", ".", "T2", ".", "T3"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TeffN", "=", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Teff", "/.", "geomparams"}], "/.", "actuation"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9623354493212852`*^9, 3.9623354915923977`*^9}, {
   3.9623355223715324`*^9, 3.9623355414987106`*^9}, {3.9623355864580536`*^9, 
   3.96233559404286*^9}, {3.962686604282791*^9, 3.962686624322817*^9}, {
   3.9636292285476513`*^9, 3.963629239121599*^9}, 3.963629622281372*^9, 
   3.963887928462826*^9, {3.963984264146452*^9, 3.9639842753437195`*^9}, {
   3.964061483039219*^9, 3.964061483711687*^9}, {3.964146574941164*^9, 
   3.964146584336218*^9}, {3.9641473488543606`*^9, 3.964147357610363*^9}, {
   3.964504653495476*^9, 3.96450472481513*^9}, {3.9645050745138493`*^9, 
   3.9645050905501385`*^9}, 3.964574271427431*^9, 3.9645743500053806`*^9, {
   3.9646702878735065`*^9, 3.9646703331336517`*^9}, {3.964671005067108*^9, 
   3.964671005247154*^9}, {3.9646752222845974`*^9, 3.964675253376589*^9}, {
   3.9646763425578136`*^9, 3.9646763523693714`*^9}, {3.9646764102304153`*^9, 
   3.964676410640856*^9}, {3.9646764976899834`*^9, 3.9646765354574623`*^9}, {
   3.9646770142658024`*^9, 3.964677044822151*^9}, 3.96649376511812*^9, 
   3.9664939065636234`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"61b24589-24c7-0742-a6c5-29392fa43291"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Inverse", " ", "Kinematics"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ikSCARA1", "[", 
      RowBox[{
      "x_", ",", "y_", ",", "z_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", 
       "d3_", ",", "Teff_", ",", "xval_", ",", "yval_", ",", "zval_"}], "]"}],
      ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xpos", ",", "ypos", ",", "zpos", ",", "sold3", ",", "sol\[Theta]12", 
         ",", "expression", ",", "subs", ",", "new", ",", "root", ",", 
         "theta1", ",", "theta2", ",", "\[Theta]1val", ",", "\[Theta]2val", 
         ",", "t", ",", "d3val"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xpos", "=", 
         RowBox[{
          RowBox[{"Teff", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "4"}], "]"}], "]"}], "-", "x"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ypos", "=", 
         RowBox[{
          RowBox[{"Teff", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "4"}], "]"}], "]"}], "-", "y"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"zpos", "=", 
         RowBox[{
          RowBox[{"Teff", "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "4"}], "]"}], "]"}], "-", "z"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sold3", "=", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"zpos", "==", "0"}], ",", "d3"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d3val", "=", 
         RowBox[{
          RowBox[{"sold3", "/.", "geomparams"}], "/.", 
          RowBox[{"{", 
           RowBox[{"z", "->", "zval"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol\[Theta]12", "=", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"xpos", ",", "ypos"}], "}"}], "==", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], ",", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}], "}"}]}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"expression", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{"Numerator", "[", 
           RowBox[{"Together", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "^", "2"}], 
               "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "^", "2"}], 
               "-", "1"}], ")"}], "/.", "sol\[Theta]12"}], "]"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"subs", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], "->", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"t", "^", "2"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"t", "^", "2"}]}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]1", "]"}], "->", 
            RowBox[{"2", 
             RowBox[{"t", "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"t", "^", "2"}]}], ")"}]}]}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"new", "=", 
         RowBox[{"Together", "[", 
          RowBox[{"expression", "/.", "subs"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"root", "=", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{"new", "==", "0"}], ",", "t"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"theta1", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]1", "->", 
            RowBox[{"2", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"t", "/.", 
               RowBox[{"root", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", 
           RowBox[{"\[Theta]1", "->", 
            RowBox[{"2", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"t", "/.", 
               RowBox[{"root", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Theta]1val", "=", 
         RowBox[{
          RowBox[{"theta1", "/.", "geomparams"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "->", "xval"}], ",", 
            RowBox[{"y", "->", "yval"}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"theta2", "=", 
         RowBox[{
          RowBox[{"ArcTan", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "/.", 
             "sol\[Theta]12"}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "/.", 
             "sol\[Theta]12"}]}], "]"}], "-", "\[Theta]1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Theta]2val", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]2", "->", "theta2"}], "/.", 
              RowBox[{"theta1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"\[Theta]2", "->", "theta2"}], "/.", 
              RowBox[{"theta1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "/.", 
           "geomparams"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "->", "xval"}], ",", 
            RowBox[{"y", "->", "yval"}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]1val", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"\[Theta]2val", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "d3val"}], "}"}], "]"}], 
           ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]1val", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"\[Theta]2val", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "d3val"}], "}"}], "]"}]}],
           "}"}], "]"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ik1", "=", 
    RowBox[{"ikSCARA1", "[", 
     RowBox[{
     "x", ",", "y", ",", "z", ",", "\[Theta]1", ",", "\[Theta]2", ",", "d3", 
      ",", "Teff", ",", "0.5", ",", "0.2", ",", "0.4"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9626828517016582`*^9, 3.962682877590023*^9}, {
   3.9626829123737335`*^9, 3.9626829202377777`*^9}, {3.962682969547798*^9, 
   3.962683015440336*^9}, {3.9626866773382854`*^9, 3.962686696009239*^9}, {
   3.9636243000759506`*^9, 3.9636243036129436`*^9}, {3.9636244374197216`*^9, 
   3.963624596861347*^9}, {3.9636247683006496`*^9, 3.9636248282940807`*^9}, {
   3.963624868119808*^9, 3.9636248934880676`*^9}, {3.9636250581711464`*^9, 
   3.9636250706139755`*^9}, {3.9636251426438103`*^9, 
   3.9636251583490067`*^9}, {3.963625214676697*^9, 3.9636252157582817`*^9}, {
   3.963625296782463*^9, 3.9636253448296185`*^9}, {3.963625405992218*^9, 
   3.963625406342556*^9}, {3.963626367894432*^9, 3.9636264981374435`*^9}, {
   3.9636265321634693`*^9, 3.963626689405222*^9}, {3.963626765334772*^9, 
   3.963626919047533*^9}, {3.963626963789341*^9, 3.9636269823093147`*^9}, {
   3.9636270583042393`*^9, 3.9636271057252293`*^9}, {3.9636277744041214`*^9, 
   3.963627784834631*^9}, {3.963627829591194*^9, 3.9636278570035305`*^9}, {
   3.9636282720342007`*^9, 3.963628283978174*^9}, {3.963629043958378*^9, 
   3.9636291002412834`*^9}, 3.963629193862507*^9, {3.9636312172444687`*^9, 
   3.9636312251253223`*^9}, {3.9636312565052967`*^9, 
   3.9636312588143883`*^9}, {3.963631403848049*^9, 3.9636314140474205`*^9}, {
   3.963631927785717*^9, 3.963631936952965*^9}, {3.96398469523172*^9, 
   3.9639847028674793`*^9}, {3.963984886069626*^9, 3.9639848920871716`*^9}, {
   3.963985156339592*^9, 3.963985160050213*^9}, {3.963985279671974*^9, 
   3.9639852860692673`*^9}, {3.9639853725823975`*^9, 3.963985373043127*^9}, {
   3.9640595783939095`*^9, 3.9640595859599705`*^9}, {3.96406546137315*^9, 
   3.964065492436487*^9}, {3.965112130351433*^9, 3.965112133123665*^9}, {
   3.9651121876292515`*^9, 3.965112188091585*^9}, {3.96511228342832*^9, 
   3.9651122909998665`*^9}, {3.965872950980467*^9, 3.9658729819803867`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"0256c58a-5f09-f64c-bc06-451e639a8311"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]1", "\[Rule]", 
      RowBox[{"-", "0.40696075770667145`"}]}], ",", 
     RowBox[{"\[Theta]2", "\[Rule]", "1.8754889808102941`"}], ",", 
     RowBox[{"d3", "\[Rule]", "0.30000000000000004`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]1", "\[Rule]", "1.1679735119314012`"}], ",", 
     RowBox[{"\[Theta]2", "\[Rule]", 
      RowBox[{"-", "1.8754889808102941`"}]}], ",", 
     RowBox[{"d3", "\[Rule]", "0.30000000000000004`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.965112147933113*^9, 3.965112188976475*^9}, {
   3.9651122874818134`*^9, 3.965112291701847*^9}, 3.965180784213007*^9, 
   3.965702392912031*^9, 3.965787245339691*^9, 3.9657888779138927`*^9, 
   3.965801407865185*^9, 3.965869703385025*^9, 3.965870341635565*^9, 
   3.965870485751911*^9, 3.965870558847788*^9, 3.965870673772381*^9, 
   3.965870755112276*^9, 3.965871741216936*^9, 3.9658718025590324`*^9, {
   3.9658729515275135`*^9, 3.9658729833391895`*^9}, 3.965960108348524*^9, 
   3.9663055933666687`*^9, 3.966317570631443*^9, 3.9663177146890583`*^9, 
   3.9663177788468113`*^9, 3.9663178214939575`*^9, 3.9664770706600285`*^9, 
   3.9664795961257515`*^9, 3.966494005561062*^9, 3.966517690899321*^9, 
   3.9666013463412604`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"a813cc44-0ba5-4b48-9f35-a54f5603b66e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"ikSCARA2", "[", 
     RowBox[{
     "x_", ",", "y_", ",", "z_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", 
      "d3_", ",", "Teff_", ",", "xval_", ",", "yval_", ",", "zval_", ",", 
      "l1_", ",", "l2_", ",", "b1_", ",", "b2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "xpos", ",", "ypos", ",", "zpos", ",", "sold3", ",", "theta1", ",", 
        "theta2", ",", "\[Theta]1val", ",", "\[Theta]2val", ",", "d3val"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xpos", "=", 
        RowBox[{
         RowBox[{"Teff", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "4"}], "]"}], "]"}], "-", "x"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ypos", "=", 
        RowBox[{
         RowBox[{"Teff", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "4"}], "]"}], "]"}], "-", "y"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"zpos", "=", 
        RowBox[{
         RowBox[{"Teff", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "4"}], "]"}], "]"}], "-", "z"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"d3val", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d3", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "b1"}], "-", "b2", "+", "z"}], ")"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"z", "->", "zval"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"theta1", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]1", "\[Rule]", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"4", " ", "l1", " ", "y"}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"16", " ", 
                  SuperscriptBox["l1", "2"], " ", 
                  SuperscriptBox["y", "2"]}], "-", 
                 RowBox[{"4", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["l1", "2"], "-", 
                    SuperscriptBox["l2", "2"], "-", 
                    RowBox[{"2", " ", "l1", " ", "x"}], "+", 
                    SuperscriptBox["x", "2"], "+", 
                    SuperscriptBox["y", "2"]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["l1", "2"], "-", 
                    SuperscriptBox["l2", "2"], "+", 
                    RowBox[{"2", " ", "l1", " ", "x"}], "+", 
                    SuperscriptBox["x", "2"], "+", 
                    SuperscriptBox["y", "2"]}], ")"}]}]}]]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["l1", "2"], "-", 
                 SuperscriptBox["l2", "2"], "+", 
                 RowBox[{"2", " ", "l1", " ", "x"}], "+", 
                 SuperscriptBox["x", "2"], "+", 
                 SuperscriptBox["y", "2"]}], ")"}]}]], "]"}]}]}], ",", 
          RowBox[{"\[Theta]1", "\[Rule]", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"4", " ", "l1", " ", "y"}], "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{"16", " ", 
                  SuperscriptBox["l1", "2"], " ", 
                  SuperscriptBox["y", "2"]}], "-", 
                 RowBox[{"4", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["l1", "2"], "-", 
                    SuperscriptBox["l2", "2"], "-", 
                    RowBox[{"2", " ", "l1", " ", "x"}], "+", 
                    SuperscriptBox["x", "2"], "+", 
                    SuperscriptBox["y", "2"]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["l1", "2"], "-", 
                    SuperscriptBox["l2", "2"], "+", 
                    RowBox[{"2", " ", "l1", " ", "x"}], "+", 
                    SuperscriptBox["x", "2"], "+", 
                    SuperscriptBox["y", "2"]}], ")"}]}]}]]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["l1", "2"], "-", 
                 SuperscriptBox["l2", "2"], "+", 
                 RowBox[{"2", " ", "l1", " ", "x"}], "+", 
                 SuperscriptBox["x", "2"], "+", 
                 SuperscriptBox["y", "2"]}], ")"}]}]], "]"}]}]}]}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"\[Theta]1val", "=", 
        RowBox[{"theta1", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "->", "xval"}], ",", 
           RowBox[{"y", "->", "yval"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Theta]2val", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]2", "->", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Theta]1"}], "+", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"x", "-", 
                   RowBox[{"l1", " ", 
                    RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}], "l2"], ",", 
                 FractionBox[
                  RowBox[{"y", "-", 
                   RowBox[{"l1", " ", 
                    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], "l2"]}], 
                "]"}]}], ")"}]}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "->", "xval"}], ",", 
              RowBox[{"y", "->", "yval"}]}], "}"}]}], "/.", 
           RowBox[{"\[Theta]1val", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]2", "->", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Theta]1"}], "+", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"x", "-", 
                   RowBox[{"l1", " ", 
                    RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}], "l2"], ",", 
                 FractionBox[
                  RowBox[{"y", "-", 
                   RowBox[{"l1", " ", 
                    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], "l2"]}], 
                "]"}]}], ")"}]}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "->", "xval"}], ",", 
              RowBox[{"y", "->", "yval"}]}], "}"}]}], "/.", 
           RowBox[{"\[Theta]1val", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Theta]1val", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"\[Theta]2val", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "d3val"}], "}"}], "]"}], 
          ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Theta]1val", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"\[Theta]2val", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "d3val"}], "}"}], "]"}]}], 
         "}"}], "]"}], ";"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"ik2", "=", 
    RowBox[{"ikSCARA2", "[", 
     RowBox[{
     "x", ",", "y", ",", "z", ",", "\[Theta]1", ",", "\[Theta]2", ",", "d3", 
      ",", "Teff", ",", "0.5", ",", "0.2", ",", "0.4", ",", "0.5", ",", "0.4",
       ",", "0.05", ",", "0.05"}], "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.963627807485256*^9, {3.963627888666544*^9, 3.9636279483044586`*^9}, {
   3.963627990386585*^9, 3.963628034376259*^9}, {3.963628119377495*^9, 
   3.963628138645447*^9}, {3.9636283345190296`*^9, 3.9636285718835335`*^9}, {
   3.9636286443347225`*^9, 3.963628668379236*^9}, {3.9636287035358543`*^9, 
   3.9636287174513016`*^9}, {3.9636289504027863`*^9, 
   3.9636290012791767`*^9}, {3.963629141846937*^9, 3.963629144860321*^9}, 
   3.963629186467619*^9, {3.9636310796197586`*^9, 3.96363109245508*^9}, {
   3.963631351744034*^9, 3.963631387120392*^9}, {3.9636314705611553`*^9, 
   3.9636315081478233`*^9}, {3.9636316708241673`*^9, 
   3.9636316746482697`*^9}, {3.963631778129488*^9, 3.963631859942951*^9}, {
   3.963631893773514*^9, 3.963631897108078*^9}, {3.963637420287548*^9, 
   3.9636374273470135`*^9}, {3.963637541611717*^9, 3.9636375709136047`*^9}, {
   3.9636376155797386`*^9, 3.9636376157063465`*^9}, {3.964064348899229*^9, 
   3.964064350544979*^9}, {3.964064627079569*^9, 3.9640646293477*^9}, {
   3.964065425312132*^9, 3.964065425900337*^9}, 3.9645743746074467`*^9, {
   3.964574571495241*^9, 3.9645746020466137`*^9}, {3.965112139599327*^9, 
   3.965112143219475*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a2d3814a-4f50-e742-aef9-066e52dd6385"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "verification", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xpos", "=", 
     RowBox[{
      RowBox[{"l1", " ", 
       RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
      RowBox[{"l2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ypos", "=", 
     RowBox[{
      RowBox[{"l1", " ", 
       RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
      RowBox[{"l2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"xpos", "/.", "geomparams"}], "/.", 
    RowBox[{"ik1", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ypos", "/.", "geomparams"}], "/.", 
    RowBox[{"ik1", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9636392602223225`*^9, 3.963639270707178*^9}, {
  3.963639359734926*^9, 3.963639372395771*^9}, {3.9639855256076126`*^9, 
  3.9639855717575073`*^9}, {3.963985690293934*^9, 3.963985716280121*^9}, {
  3.9640653745368996`*^9, 3.9640653881145344`*^9}, {3.9645743895098114`*^9, 
  3.96457439193297*^9}, {3.965112236713642*^9, 3.9651122401353817`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"585d5a12-baab-7f49-b531-7127c425a051"],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{
  3.9639855728881283`*^9, {3.963985693791786*^9, 3.9639857218674088`*^9}, 
   3.964059556476839*^9, 3.9640606428703346`*^9, 3.9640645260692215`*^9, 
   3.9640647680845585`*^9, {3.9640653818905296`*^9, 3.964065388960554*^9}, 
   3.9641458887356606`*^9, 3.9641466902101574`*^9, 3.964147395369747*^9, 
   3.964147676726265*^9, 3.9644981000944767`*^9, 3.964500883669281*^9, 
   3.964504747838402*^9, 3.9645051131550827`*^9, 3.964505364190735*^9, 
   3.964505449713434*^9, 3.964506464895235*^9, 3.9645065023945427`*^9, 
   3.9645067956769695`*^9, {3.9645743871677628`*^9, 3.964574396234886*^9}, {
   3.964574576533556*^9, 3.964574607146303*^9}, 3.9645746818785477`*^9, 
   3.9646597712574368`*^9, 3.9651121669320393`*^9, 3.965112240618353*^9, 
   3.965180784292547*^9, 3.965702392991207*^9, 3.9657872454278183`*^9, 
   3.9657888779672565`*^9, 3.9658014079291077`*^9, 3.9658697034168816`*^9, 
   3.9658703416513577`*^9, 3.9658704857850723`*^9, 3.96587055887982*^9, 
   3.9658706738039627`*^9, 3.9658707551445065`*^9, 3.9658717412573414`*^9, 
   3.965871802601221*^9, 3.9659601083805866`*^9, 3.9663055933982697`*^9, 
   3.966317570668997*^9, 3.9663177147328033`*^9, 3.9663177793269157`*^9, 
   3.9663178215412674`*^9, 3.9664770706944275`*^9, 3.9664795961810474`*^9, 
   3.966494005598028*^9, 3.966517690916325*^9, 3.9666013463648458`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"7d61edd1-8e37-4b85-aa59-bf122d4f36b1"],

Cell[BoxData["0.19999999999999996`"], "Output",
 CellChangeTimes->{
  3.9639855728881283`*^9, {3.963985693791786*^9, 3.9639857218674088`*^9}, 
   3.964059556476839*^9, 3.9640606428703346`*^9, 3.9640645260692215`*^9, 
   3.9640647680845585`*^9, {3.9640653818905296`*^9, 3.964065388960554*^9}, 
   3.9641458887356606`*^9, 3.9641466902101574`*^9, 3.964147395369747*^9, 
   3.964147676726265*^9, 3.9644981000944767`*^9, 3.964500883669281*^9, 
   3.964504747838402*^9, 3.9645051131550827`*^9, 3.964505364190735*^9, 
   3.964505449713434*^9, 3.964506464895235*^9, 3.9645065023945427`*^9, 
   3.9645067956769695`*^9, {3.9645743871677628`*^9, 3.964574396234886*^9}, {
   3.964574576533556*^9, 3.964574607146303*^9}, 3.9645746818785477`*^9, 
   3.9646597712574368`*^9, 3.9651121669320393`*^9, 3.965112240618353*^9, 
   3.965180784292547*^9, 3.965702392991207*^9, 3.9657872454278183`*^9, 
   3.9657888779672565`*^9, 3.9658014079291077`*^9, 3.9658697034168816`*^9, 
   3.9658703416513577`*^9, 3.9658704857850723`*^9, 3.96587055887982*^9, 
   3.9658706738039627`*^9, 3.9658707551445065`*^9, 3.9658717412573414`*^9, 
   3.965871802601221*^9, 3.9659601083805866`*^9, 3.9663055933982697`*^9, 
   3.966317570668997*^9, 3.9663177147328033`*^9, 3.9663177793269157`*^9, 
   3.9663178215412674`*^9, 3.9664770706944275`*^9, 3.9664795961810474`*^9, 
   3.966494005598028*^9, 3.966517690916325*^9, 3.9666013463648458`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"608bd4f3-7f9b-4ece-873f-fd191ecacba1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Workspace", " ", "Analysis"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "=", "0.5"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"x0", "=", "0.2"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"y0", "=", "0.3"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"z0", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pmplot", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x0", "+", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "t", "]"}]}]}], ",", 
         RowBox[{"y0", "+", 
          RowBox[{"r", " ", 
           RowBox[{"Sin", "[", "t", "]"}]}]}], ",", "z0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"cyl", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      InterpretationBox[
       TagBox[
        FrameBox[
         PaneBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                BoxBaselineShift->-0.25,
                BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
               
               FontColor->RGBColor[
                0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
              ShowStringCharacters->False,
              FontFamily->"Source Sans Pro Black",
              FontSize->0.65 Inherited,
              FontWeight->"Heavy",
              PrivateFontOptions->{"OperatorSubstitution"->False}], 
             StyleBox[
              RowBox[{
               StyleBox["\<\"Annulus3D\"\>", "ResourceFunctionLabel"], " "}],
              ShowAutoStyles->False,
              ShowStringCharacters->False,
              FontSize->0.9 Inherited,
              FontColor->GrayLevel[0.1]]}
           },
           GridBoxSpacings->{"Columns" -> {{0.25}}}],
          Alignment->Left,
          BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
          BaselinePosition->Baseline,
          FrameMargins->{{3, 0}, {0, 0}}],
         Background->RGBColor[0.968627, 0.976471, 0.984314],
         BaselinePosition->Baseline,
         DefaultBaseStyle->{},
         FrameMargins->{{0, 0}, {1, 1}},
         FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
         RoundingRadius->4],
        {"FunctionResourceBox", 
         RGBColor[
         0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
         "\"Annulus3D\""},
        TagBoxNote->"FunctionResourceBox"],
       ResourceFunction["Annulus3D"],
       BoxID -> "Annulus3D",
       Selectable->False], "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x0", ",", "y0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x0", ",", "y0", ",", "0.3"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.9"}], "}"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"pmplot", ",", "cyl"}], "}"}], "]"}], "\n", 
   RowBox[{
    RowBox[{"taskspacepoints", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x0", "+", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "t", "]"}]}]}], ",", 
         RowBox[{"y0", "+", 
          RowBox[{"r", " ", 
           RowBox[{"Sin", "[", "t", "]"}]}]}], ",", "z0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"2", " ", "\[Pi]"}], ",", "0.1"}], "}"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"len", "=", 
     RowBox[{"Length", "[", "taskspacepoints", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"jointangs", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ikSCARA2", "[", 
        RowBox[{
        "x", ",", "y", ",", "z", ",", "\[Theta]1", ",", "\[Theta]2", ",", 
         "d3", ",", "Teff", ",", 
         RowBox[{"taskspacepoints", "[", 
          RowBox[{"[", 
           RowBox[{"ii", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"taskspacepoints", "[", 
          RowBox[{"[", 
           RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"taskspacepoints", "[", 
          RowBox[{"[", 
           RowBox[{"ii", ",", "3"}], "]"}], "]"}], ",", "0.5", ",", "0.4", 
         ",", "0.05", ",", "0.05"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "1", ",", "len"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9634674244952526`*^9, 3.9634674244952526`*^9}, {
   3.964061040171894*^9, 3.9640610462355385`*^9}, {3.9640610963987217`*^9, 
   3.9640611016314697`*^9}, {3.9640611960358715`*^9, 3.964061215112156*^9}, {
   3.9640612524765205`*^9, 3.9640612528548126`*^9}, {3.964061303874119*^9, 
   3.964061304271965*^9}, {3.964061778653738*^9, 3.964061786616186*^9}, {
   3.964064911121992*^9, 3.96406494638381*^9}, 3.964065003418894*^9, {
   3.964065631512455*^9, 3.9640656595231686`*^9}, {3.9663058731378937`*^9, 
   3.966305876974676*^9}, {3.9663059308976727`*^9, 3.966305967709688*^9}, {
   3.9663062815470333`*^9, 3.9663063015648937`*^9}, {3.966306490651499*^9, 
   3.966306547976961*^9}, {3.966306816649626*^9, 3.966306817476141*^9}, {
   3.966307017612137*^9, 3.9663071308968315`*^9}, {3.9663073006545963`*^9, 
   3.9663073070462456`*^9}, 3.9664799015900936`*^9, {3.966479954351906*^9, 
   3.9664800051586037`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"98d3e502-f4e5-bc4f-8a2c-ce0ebeff5846"],

Cell[BoxData[
 Graphics3DBox[{BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmJOIAaxTYxB4LK9MZRmgAKY+EwwOAkXnwXlYxffiVMc
3XyYOIS+iWE+ujjMPbjEsZv/Eac4RN/j/ej2ooungcGz/bjE0c1HFf+M4S/s
4h8JiCPMBwCjZYNZ
    "],
    SplineClosed->{False, True},
    SplineDegree->{1, 2},
    SplineKnots->{{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}},
    SplineWeights->
     NCache[{{1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
        Rational[-1, 2], 1, 2^Rational[-1, 2], 1}, {
       1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
        Rational[-1, 2], 1}}, {{
       1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 1,
         0.7071067811865475, 1}, {
       1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 1,
         0.7071067811865475, 1}}]], BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmJOIAaxTYxB4LK9MRoNE581EwRuwsUh/JM4xHfiFEc3
HyY+E2oeuvno4jD34BLHbv5HAuKfMexFF08Dg2f78YtfxhCHuOvxfnTzsYt/
xCmObj4AUSSsIQ==
    "],
    SplineClosed->{False, True},
    SplineDegree->{1, 2},
    SplineKnots->{{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}},
    SplineWeights->
     NCache[{{1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
        Rational[-1, 2], 1, 2^Rational[-1, 2], 1}, {
       1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
        Rational[-1, 2], 1}}, {{
       1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 1,
         0.7071067811865475, 1}, {
       1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 1,
         0.7071067811865475, 1}}]], BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmJOIAaxTYxB4LK9MZRmgAKY+KyZIHATLg7hn8QhvhOn
OLr5MPGZUPPQzUcXh7kHlzgu9xuj0ej+Mkbhn8QhvhOnOLr56P5CNx9dHN1f
6OLo5gMA32ubgw==
    "],
    SplineClosed->{False, True},
    SplineDegree->{1, 2},
    SplineKnots->{{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}},
    SplineWeights->
     NCache[{{1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
        Rational[-1, 2], 1, 2^Rational[-1, 2], 1}, {
       1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
        Rational[-1, 2], 1}}, {{
       1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 1,
         0.7071067811865475, 1}, {
       1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 1,
         0.7071067811865475, 1}}]], BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmJOIAaxZ80EgY/2xmBw2Z4BCmDiJmDxx/tRxU9iiKeB
wbP9uMTRzUcV/2yPbj528Y8ExDHdDxOH0ej+QhU/iSGO7i90cXTz0f2Fbj52
8Y8ExBHmAwBCwpP3
    "],
    SplineClosed->{False, True},
    SplineDegree->{1, 2},
    SplineKnots->{{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}},
    SplineWeights->
     NCache[{{1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
        Rational[-1, 2], 1, 2^Rational[-1, 2], 1}, {
       1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
        Rational[-1, 2], 1}}, {{
       1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 1,
         0.7071067811865475, 1}, {
       1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 1,
         0.7071067811865475, 1}}]]}]], "Output",
 CellChangeTimes->{3.966517706098196*^9, 3.9666013490114727`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"c0f8adff-ee8f-4b7c-b590-8254ff0b27ef"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Line3DBox[CompressedData["
1:eJxN1Xs0FFgYAPDR1m4UodmSrVVYWwwlU6wtX16jPPIojMfOLhK2s6r1OKY9
WFY2jkElryiLaq3dpLMYhctgBjHGzJJhh9GYsTpOVJrKqrbO2b137zn3n98f
997vu9+937bwk36RKygUiuvb+d7b6XT83VDBCZ5Wko2NBEpL3o1ecLKyZJWz
VGA2qT+oRRvGnlnjJjvkpoIx/55xtfF97OpF6cGczSr4dvLs9gGQYn92lFI2
MqmERD39AK7/OPbFmj2xQaAEnfkCL72tk9gT75+9yImehgiXsIHao1PYRz1i
dTScFbCWk8lY3qLADtFrblYvT4F5eWypQ+U09g3Tjt8IouRQeCSZPv+hCjsl
VXeeHyyDhWrtNKX7DIlrQ3vWHxNSCHV5SQ2i/4U92lFHY2liGITBh7MKHxM/
ldS1T/RYAvT5mVP03bPYK7INNc+/GgI3a18UEkHcJnzM6FMdEdB3XFYEZRA3
n2MyGLb94JQxfcSykHjfLWTbtySApW7DM4eKiVelr40zau+EDoXLjfhzxK9t
+cQ17gYCdaGnaX4McWPfroy2qSZYlhnZ2n9O3OeExKzerA7Gjq152vmcxHXu
mbjIq6kczpRpMWsriSfVZI1ZS68iQVUWTdJL8uZjHlxcdrwBpcu+YFAEJM8B
kymObFYHYuxZn7M9QYldZ5f8iOUsH1UUbNHw0yT3xVDXPdyk349WO3tajfs8
wL6Xts5YbCBCXE5tihlbjr1Xz8PY+vwQqrgu/aHIXYZ9+EWXqzNNjHR/bszX
ciD1dvbpm7S/q8TIPtG31Xs7qc8nqR7bvnoqRr9o3/p4YCep55PCABtLEwnS
Fi6+8bMh9Z9TOaBrbSNBhgfdbRUO5L18wKvtLjWVoJ0ML8do9yHsyQl/Uvc/
EaOMwbkwixAhyWdE8BPTMjFKCQ3ouWjeh715tKtpxkKMTD/iNqu9+NgTuBFu
3uVDSB9+d9yaxsN+KO/SLG+FCHXZcdgRBg0kruT3U5Nk99BCiYX8Ob8Ee3rL
ys2zZgKUP7gq8EJ6MfrPhXeCBJl7O9BCFBsJA29jv7V6o3RU3YCYgbn70uxb
sM/x41Cb509o2WSz2JXGw67LVa8TWl2G8CnrZeOKbrIOQx5tdf5XoEu5pyOn
+NhzIvOOxc82wIEJFnNBJcAemzxPZR9ugzv1G6vHW3uwu4c8jGiI7AQdUWp9
kmcv9u96vhxpCRdANNXrZF8ecUHOovdS2D1ovBK10eEi8d+U9EfxHoPworrR
v4xJPF+v0rylaAj4wqble3Kyb09rP6fmpgR4Vy/v2GVInDo3wx5qHQaHPXVt
FG1y/tLaG6OabCl8HTPYr8nqwl7Qzzqa4iEDP2a8ht3pduz2uYbe1DA55PNc
7tw90IQ9oa0pkDcyBQYXuI2iYzXYX7pd2nT3MwVQaImrehN9yX+10m4812ca
vh+sS8+2ryX/bZFJfQBNCbEsE+b+a3exW+3K4LwaU0LMj5wrrqPd2LNNU8sV
VBU88CtwNLjdi/2hweuSOFCBgYXdhcDiAewF60XN10NVUBKZah34WkT6yL/9
5WVVyKPd/+sv/wBTjnfV
        "]]},
      Annotation[#, "Charting`Private`Tag$4312#1"]& ]}, {}}, {
    BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmJOIAaxTYxB4LK9MZRmgAKY+EwwOAkXnwXlYxffiVMc
3XyYOIS+iWE+ujjMPbjEsZv/Eac4RN/j/ej2ooungcGz/bjE0c1HFf+M4S/s
4h8JiCPMBwCjZYNZ
     "],
     SplineClosed->{False, True},
     SplineDegree->{1, 2},
     SplineKnots->{{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}},
     SplineWeights->
      NCache[{{1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
         Rational[-1, 2], 1, 2^Rational[-1, 2], 1}, {
        1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 
         2^Rational[-1, 2], 1}}, {{
        1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 
         1, 0.7071067811865475, 1}, {
        1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 
         1, 0.7071067811865475, 1}}]], BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmJOIAaxTYxB4LK9MRoNE581EwRuwsUh/JM4xHfiFEc3
HyY+E2oeuvno4jD34BLHbv5HAuKfMexFF08Dg2f78YtfxhCHuOvxfnTzsYt/
xCmObj4AUSSsIQ==
     "],
     SplineClosed->{False, True},
     SplineDegree->{1, 2},
     SplineKnots->{{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}},
     SplineWeights->
      NCache[{{1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
         Rational[-1, 2], 1, 2^Rational[-1, 2], 1}, {
        1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 
         2^Rational[-1, 2], 1}}, {{
        1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 
         1, 0.7071067811865475, 1}, {
        1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 
         1, 0.7071067811865475, 1}}]], BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmJOIAaxTYxB4LK9MZRmgAKY+KyZIHATLg7hn8QhvhOn
OLr5MPGZUPPQzUcXh7kHlzgu9xuj0ej+Mkbhn8QhvhOnOLr56P5CNx9dHN1f
6OLo5gMA32ubgw==
     "],
     SplineClosed->{False, True},
     SplineDegree->{1, 2},
     SplineKnots->{{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}},
     SplineWeights->
      NCache[{{1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
         Rational[-1, 2], 1, 2^Rational[-1, 2], 1}, {
        1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 
         2^Rational[-1, 2], 1}}, {{
        1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 
         1, 0.7071067811865475, 1}, {
        1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 
         1, 0.7071067811865475, 1}}]], BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmJOIAaxZ80EgY/2xmBw2Z4BCmDiJmDxx/tRxU9iiKeB
wbP9uMTRzUcV/2yPbj528Y8ExDHdDxOH0ej+QhU/iSGO7i90cXTz0f2Fbj52
8Y8ExBHmAwBCwpP3
     "],
     SplineClosed->{False, True},
     SplineDegree->{1, 2},
     SplineKnots->{{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}},
     SplineWeights->
      NCache[{{1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^
         Rational[-1, 2], 1, 2^Rational[-1, 2], 1}, {
        1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 2^Rational[-1, 2], 1, 
         2^Rational[-1, 2], 1}}, {{
        1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 
         1, 0.7071067811865475, 1}, {
        1, 0.7071067811865475, 1, 0.7071067811865475, 1, 0.7071067811865475, 
         1, 0.7071067811865475, 1}}]]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-0.29999949112838276`, 
   0.699999999999996}, {-0.19980598585902037`, 0.7998397240500588}, {0., 0.4}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.966517706098196*^9, 3.9666013490171595`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"b5a29d72-12fd-4383-aa34-5435b8eaf395"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Forward", " ", "Dynamics"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"subs", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1", "->", 
        RowBox[{"\[Theta]1", "[", "t", "]"}]}], ",", 
       RowBox[{"\[Theta]2", "->", 
        RowBox[{"\[Theta]2", "[", "t", "]"}]}], ",", 
       RowBox[{"d3", "->", 
        RowBox[{"d3", "[", "t", "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Dh1mid", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"l1", "/", "2"}], ",", "0", ",", "b1", ",", "\[Theta]1"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Dh2mid", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"l2", "/", "2"}], ",", "0", ",", "b2", ",", "\[Theta]2"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Dh3mid", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"d3", "/", "2"}], ",", "0"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"T1mid", "=", 
     RowBox[{"T", "/.", 
      RowBox[{"Inner", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "\[Alpha]", ",", "d", ",", "\[Theta]"}], "}"}], 
        ",", "Dh1mid", ",", "List"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2mid", "=", 
     RowBox[{"T", "/.", 
      RowBox[{"Inner", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "\[Alpha]", ",", "d", ",", "\[Theta]"}], "}"}], 
        ",", "Dh2mid", ",", "List"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T3mid", "=", 
     RowBox[{"T", "/.", 
      RowBox[{"Inner", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "\[Alpha]", ",", "d", ",", "\[Theta]"}], "}"}], 
        ",", "Dh3mid", ",", "List"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1midt", "=", 
     RowBox[{"T1mid", "/.", "subs"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2midt", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"T1", ".", "T2mid"}], "/.", "subs"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T3midt", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"T1", ".", "T2", ".", "T3mid"}], "/.", "subs"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cm1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T1midt", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "4"}], "]"}], "]"}], ",", 
       RowBox[{"T1midt", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "4"}], "]"}], "]"}], ",", 
       RowBox[{"T1midt", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cm2", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"T2midt", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"T2midt", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"T2midt", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cm3", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"T3midt", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"T3midt", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"T3midt", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"vcm1", "=", 
     RowBox[{"D", "[", 
      RowBox[{"cm1", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vcm2", "=", 
     RowBox[{"D", "[", 
      RowBox[{"cm2", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vcm3", "=", 
     RowBox[{"D", "[", 
      RowBox[{"cm3", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"I1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ixx", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Iyy", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "Izz"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"I2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ixx", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Iyy", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "Izz"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"I3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ixx", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Iyy", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "Izz"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ke1trans", " ", "=", " ", 
     RowBox[{"Simplify", " ", "[", 
      RowBox[{
       RowBox[{"m1", "/", "2"}], 
       RowBox[{"(", 
        RowBox[{"vcm1", ".", "vcm1"}], ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ke2trans", " ", "=", " ", 
     RowBox[{"Simplify", " ", "[", 
      RowBox[{"Together", "[", 
       RowBox[{
        RowBox[{"m2", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{"vcm2", ".", "vcm2"}], ")"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ke3trans", " ", "=", " ", 
     RowBox[{"Simplify", " ", "[", 
      RowBox[{"Together", "[", 
       RowBox[{
        RowBox[{"m3", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{"vcm3", ".", "vcm3"}], ")"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"R1", " ", "=", " ", 
     RowBox[{"T1midt", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R2", " ", "=", " ", 
     RowBox[{"T2midt", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R3", " ", "=", " ", 
     RowBox[{"T3midt", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]1", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "R1", "]"}], ".", 
       RowBox[{"D", "[", 
        RowBox[{"R1", ",", "t"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]2", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "R2", "]"}], ".", 
       RowBox[{"D", "[", 
        RowBox[{"R2", ",", "t"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]3", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "R3", "]"}], ".", 
       RowBox[{"D", "[", 
        RowBox[{"R3", ",", "t"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalOmega]1", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"\[CapitalOmega]1", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"\[CapitalOmega]1", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalOmega]2", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"\[CapitalOmega]2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"\[CapitalOmega]2", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalOmega]3", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"\[CapitalOmega]3", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"\[CapitalOmega]3", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ke1rot", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Omega]1", ".", "I1", ".", 
         RowBox[{"Transpose", "[", "\[Omega]1", "]"}]}], ")"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ke2rot", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Omega]2", ".", "I2", ".", 
         RowBox[{"Transpose", "[", "\[Omega]2", "]"}]}], ")"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ke3rot", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Omega]3", ".", "I3", ".", 
         RowBox[{"Transpose", "[", "\[Omega]3", "]"}]}], ")"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ke", "=", 
     RowBox[{
     "ke1rot", "+", "ke1trans", "+", "ke2rot", "+", "ke2trans", "+", "ke3rot",
       "+", "ke3trans"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h1", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"T1midt", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"T1midt", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"T1midt", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "}"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h2", "=", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"T2midt", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "4"}], "]"}], "]"}], ",", 
         RowBox[{"T2midt", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "4"}], "]"}], "]"}], ",", 
         RowBox[{"T2midt", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h3", "=", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"T3midt", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "4"}], "]"}], "]"}], ",", 
         RowBox[{"T3midt", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "4"}], "]"}], "]"}], ",", 
         RowBox[{"T3midt", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pe", "=", 
     RowBox[{
      RowBox[{"m1", " ", "g", " ", "h1"}], "+", 
      RowBox[{"m2", " ", "g", " ", "h2"}], "+", 
      RowBox[{"m3", " ", "g", " ", "h3"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"ke", "-", "pe"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], ",", 
       RowBox[{"d3", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"q", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqdyn1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"L", ",", 
             RowBox[{"dq", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "t"}], "]"}], "-", 
         RowBox[{"D", "[", 
          RowBox[{"L", ",", 
           RowBox[{"q", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], "/.", 
       "geomparams"}], "/.", 
      RowBox[{"(", 
       RowBox[{"Izz", "->", "2.803"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqdyn2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"L", ",", 
             RowBox[{"dq", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "t"}], "]"}], "-", 
         RowBox[{"D", "[", 
          RowBox[{"L", ",", 
           RowBox[{"q", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], "/.", 
       "geomparams"}], "/.", 
      RowBox[{"(", 
       RowBox[{"Izz", "->", "0.637"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqdyn3", "=", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"L", ",", 
            RowBox[{"dq", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{"L", ",", 
          RowBox[{"q", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "]"}], "/.", 
      "geomparams"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"eqdyn1", ",", "eqdyn2", ",", "eqdyn3"}], "}"}], "==", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Pi]", "/", "4"}], "]"}], ",", "0", ",", "0"}], 
           "}"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "0", "]"}], "==", 
          RowBox[{"\[Pi]", "/", "4"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "0", "]"}], "==", 
          RowBox[{"\[Pi]", "/", "6"}]}], ",", 
         RowBox[{
          RowBox[{"d3", "[", "0", "]"}], "==", "0.3"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"d3", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]1", ",", "\[Theta]2", ",", "d3", ",", 
         RowBox[{"\[Theta]1", "'"}], ",", 
         RowBox[{"\[Theta]2", "'"}], ",", 
         RowBox[{"d3", "'"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], ",", 
         RowBox[{
          RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], ",", 
         RowBox[{
          RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "}"}], "/.", " ", 
       "s"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{"\[Theta]1", ",", "\[Theta]2", ",", 
        RowBox[{"\[Theta]1", "'"}], ",", 
        RowBox[{"\[Theta]2", "'"}]}], "}"}]}]}], "]"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"d3", "[", "t", "]"}], "}"}], "/.", " ", "s"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "d3", "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.964063087703249*^9, 3.9640631600413475`*^9}, {
   3.9640641928295994`*^9, 3.964064211772251*^9}, {3.9640652975790615`*^9, 
   3.9640652990406704`*^9}, {3.9640653321242313`*^9, 3.964065360185583*^9}, 
   3.96414603657572*^9, {3.9641474557426777`*^9, 3.9641474786458073`*^9}, {
   3.964147556466114*^9, 3.964147584177578*^9}, 3.964147673150593*^9, {
   3.9641480828917828`*^9, 3.9641480883048973`*^9}, {3.964149424502735*^9, 
   3.9641494515168705`*^9}, {3.9641502932882557`*^9, 
   3.9641502942758465`*^9}, {3.964499201227913*^9, 3.964499219664299*^9}, {
   3.9644992582652054`*^9, 3.9644994502633324`*^9}, {3.9644995069436626`*^9, 
   3.964499507310524*^9}, {3.964499563214653*^9, 3.9644996527809143`*^9}, {
   3.964499711320738*^9, 3.964499807482813*^9}, {3.9644998498702946`*^9, 
   3.9645002447065697`*^9}, {3.964500280014572*^9, 3.964500286655958*^9}, {
   3.964500343765806*^9, 3.9645004616804104`*^9}, {3.964500504644306*^9, 
   3.964500684821953*^9}, {3.9645007250099716`*^9, 3.9645007331259403`*^9}, {
   3.964500767450445*^9, 3.964501438443411*^9}, {3.96450154683461*^9, 
   3.9645015663430195`*^9}, {3.9645016085641327`*^9, 3.964501701247751*^9}, {
   3.9645017844821205`*^9, 3.964501805331293*^9}, {3.964501864635412*^9, 
   3.9645018757405624`*^9}, {3.9645020245855827`*^9, 3.964502026323038*^9}, {
   3.964502130482382*^9, 3.964502140532345*^9}, {3.9645029590645714`*^9, 
   3.964503069541641*^9}, {3.9645032904942894`*^9, 3.964503291434635*^9}, {
   3.9645035212461185`*^9, 3.9645037501300926`*^9}, {3.9645045516812*^9, 
   3.964504587672081*^9}, {3.964504763864996*^9, 3.9645047890128136`*^9}, {
   3.9645048249853287`*^9, 3.964504838729416*^9}, {3.9645048949065323`*^9, 
   3.9645049246093636`*^9}, {3.9645052899210777`*^9, 3.964505349863331*^9}, {
   3.9645054118024273`*^9, 3.9645054360311375`*^9}, {3.964505898442034*^9, 
   3.9645059430426693`*^9}, {3.964574789002405*^9, 3.964574794241783*^9}, {
   3.964661001060732*^9, 3.964661019152025*^9}, 3.9657136674334145`*^9, 
   3.9657143708290577`*^9, {3.965714451667055*^9, 3.9657144833078537`*^9}, {
   3.9657146696247215`*^9, 3.9657147025251884`*^9}, {3.9657149865105515`*^9, 
   3.9657149871052055`*^9}, {3.9657151009410057`*^9, 3.965715101594864*^9}, {
   3.965715184014412*^9, 3.965715238508642*^9}, {3.965715584258192*^9, 
   3.965715586104431*^9}, {3.965716018395191*^9, 3.9657160195913773`*^9}, {
   3.9657160611404457`*^9, 3.965716069956682*^9}, 3.9657161712543926`*^9, 
   3.965716773110037*^9, 3.965787232028246*^9, {3.9657872839674397`*^9, 
   3.9657872876486626`*^9}, {3.9657888692436485`*^9, 
   3.9657888737785835`*^9}, {3.965789963842087*^9, 3.965789966152746*^9}, {
   3.965790314037077*^9, 3.9657903159137726`*^9}, {3.9657910712187366`*^9, 
   3.9657911001878185`*^9}, {3.9657911621928387`*^9, 3.965791168391287*^9}, {
   3.965791387101303*^9, 3.9657913909060345`*^9}, {3.9657917443829575`*^9, 
   3.965791746216913*^9}, 3.965792157491785*^9, {3.96579219020269*^9, 
   3.9657922216985035`*^9}, {3.965793731926014*^9, 3.9657937757365513`*^9}, {
   3.965794031068329*^9, 3.965794031875946*^9}, {3.965794086510168*^9, 
   3.965794149772085*^9}, {3.96579418976433*^9, 3.9657941900673256`*^9}, {
   3.9657942540636635`*^9, 3.965794294998707*^9}, {3.9657962265127125`*^9, 
   3.9657962495927944`*^9}, {3.965797187327324*^9, 3.96579728385384*^9}, {
   3.9657986521152344`*^9, 3.9657986565979233`*^9}, {3.9657986918597736`*^9, 
   3.965798698870758*^9}, {3.9657991462456436`*^9, 3.9657991513789043`*^9}, {
   3.96579920656559*^9, 3.965799225439335*^9}, {3.9657992758703938`*^9, 
   3.965799282334646*^9}, {3.9657994539672775`*^9, 3.9657994886459713`*^9}, {
   3.9657996682050953`*^9, 3.965799668906147*^9}, {3.965799792083412*^9, 
   3.9657997939904995`*^9}, {3.965800026257988*^9, 3.9658000275533657`*^9}, {
   3.965800186342127*^9, 3.9658002122052307`*^9}, {3.965800332538439*^9, 
   3.9658003648105335`*^9}, {3.965800400142149*^9, 3.965800409492897*^9}, 
   3.965800445083067*^9, {3.9658004873751945`*^9, 3.965800488720127*^9}, {
   3.9658005287157326`*^9, 3.9658005303787365`*^9}, 3.9658005667790565`*^9, {
   3.9658007963537846`*^9, 3.9658008116318398`*^9}, {3.965801141606783*^9, 
   3.965801145798155*^9}, {3.965885263692316*^9, 3.965885271421673*^9}, {
   3.9658858455376167`*^9, 3.9658858470778275`*^9}, 3.965965993035513*^9, {
   3.96596603733346*^9, 3.965966068319626*^9}, {3.966480814668371*^9, 
   3.9664808296784325`*^9}, 3.9664957370221806`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"e988ee22-d207-464e-9fcf-6d072dc7345a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
bacy3bAmp1ZCZ1ohO358tG2TO/4PdEWesA==
          "]]}, Annotation[#, "Charting`Private`Tag$5847#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$5847#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c81f8XxyN7j7vce6ms7H2vO3nREA0Ns7SE9iCRJpIkSVGhEoWshPo2
REmljIaMhFBGSEbJSPT7/P66j+fj3vs+r/M6r/O57zvPe+9qX9FZs2Z9mD1r
1v9fx9oqX2ifSbfJ0l3VfFXjvE19Ci3Erinctn5bxcBq6S22IL/zpjVdsHV7
qNyqL73fNmhlzsfZTTdsQ6XvfCNJn7BVHqRemPxYZGu5qeqtnHS8bXvJir2j
H8tt2SXjRfLSN20Xa/d/Hvn4wVaG9jJfV/qu7eRH64vDH7/aDh2J6Tkn/dz2
+YJb6bU3ftke2GdWO6+pzpbZ/qjH22ja1p2+8/zNo59tSbs25kgumA2LY1Ol
1gc7bS+YL368wlUKD+jrFZdd6LX9lGhWNqIkj25K6xsxpx+2Z9KPvxNVU4aN
T/pgjuGILTWh83T8NVWwDn2/UUPUOeXiaPNhjAy5xVvezB7/bbufm7axMpwG
Hafgmcb4CduFQ38O7emkw7fZWfwVbco2TLBqM52jji8P/60/fHralpefdO/Y
0zlwDMi3bJj5Z7trYiT0tfw8eIa1yfaRRDBpqNRm7KoJ3p/h3Y88RSHIzUu9
dEkLN3ff/v7o6Wy0zM29vuiKFm6X9utOvZiNQ5eyU0ava2FVsUM/r2o2HoRl
Xl2drYVGOZO8/+qJvj1SExVKtHDv7ey7F/tmQ188IS7yixbiutYEDKqIgbLx
cGiQkTb0Hi3QCd0ihhEVp01u5drw36sRvHhSDE27NN/veKWNG80mVxRnxFBW
8cf2eI02Us9lz9SJiiPuUO6crEZtdKzxvL1CThxmX+XaJ/u1IbfibY/cHHHs
KXy3/pqqDqLi+WseLxBHv7Prui4fHUyd0HlxLFocXTGb3AIkdSGun2D/lCSB
Pf1GmmZyujB5K+xpoUlg3GHyxw8lXRyoMTSYYkpAZvaFk9vpushUWixrryMB
s5Dn9zYZ62LYWy9olCWBo766qs5rdJH4Xmp0tocEKDYD7wyv60LzQoXL/usS
cBwKduxmz0fPum3rtthIgmmuESklmI/URsMgnYWSGAx4UW5oNx/9R97Y/3CU
RMKYkiBg6XyUdJyMOesqibbpbJN/G+dj8tWBDfK7JREg16qqdno+LuQ/mD1w
VRLJ+mhb1jIfwelB3wdmJLFrZw99Xwdxfpa9BU1cCra3Y9zju+dDYVHcvgWy
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
+NEC0rLrrGbJqSLTy8dpXjPB73xlfRVUYbTg3qW8VgswQjm3i5VUwVZyMX3+
xQL+H/iPOWRVOOXEbxr+boHHt3dJn1RXxbu4zrzDgxboa5f8HjhHFS7BlpMS
IxaYXNuwwX2eKjYsrDuvPmYB8b70uN/aqghoU3nuNMsS01dpl28aquJ1hVdp
jqglZt9ZOZturErcKzMfyIhb4me1m0qUiSqqjvPyqqQtsfyRtOhyc1VozvO+
6KRqibALuSej2Kqo3VK41UnXEnbXju5ZBFXoLpvanKNniWfKt/WC7VRxxGqR
l4yhJW5mHL6Yba8KPfFPK6tMLaE/tH9UZZEqQjNn8Zy4lrjU5v1MykkVjbFO
Vjl8S1BOcUZWLiX8CE4wkbGxhNeLX+dTlqmiyUFPq8reEi4/pdYsc1aFWZ+z
nNMyS7jWzo2d5aqKyNokiZwVlug77SVywk0VrY86Z8msskT4T+OfCh6qiIoO
/l3paomhIiWJRetU0WF4vc1xoyXmrP7xz8qb8JvU15S92RJGvr/CFHxUEfPX
ok7axxK/p933jPqqgvOm4lXlNks4dP281LNdFXF7BgscAyzBN31uuiNAFT1u
nNzsQEu8kiyyvh2oCoFteIZ0sCXOHH80dyZIFb2KlOTKw5ZQ1RhrrTysChQK
TzietES/+2176UhVDP2KcXVMtITlreZ7KsT/9NamNLdryZYQHUrdqJ5KzKP0
vvvIVUs0WEt7Wd5URfqpDs+kNEuUdlwePJ6tirUMqw19OZa4qMi6HXdfFS/t
W/xOl1qismJEoP9BFUXzh7d+fmoJW9tKjf8aVJEqJ77dvNwS6Jp9YeEnVRxq
NNn5qcISq8v/y9/ZQfi7I3yv/ntLFPVVlr0eVMWV8/oHK79aoooZ/dZAloSo
IJsQ9W5LHA7x7ktTICFo3ZpD/t8s8fLdjL6KCgkrdY4eURuwxFJfr9QWGgkS
j96Hbv9tSfx/Tf8sokvC6LXusNJxS+hRGafM9Un4Ev4nXPkPob/nV5WrEQkl
y7RPPpqxRJrPE/4hCxL8O4JPS0tZ4bOWeYuuDQkbXsZEr5exwn69geVDIGFZ
TtqZQjkrvGrKsM1eQIJuYPVZT2UrsPrm3RheQkKr5JwL2XQrPEreufT1ahKq
Bizjp5lWmElmbqW6kvCgdknCqjlWmJTS/ObmTsKFKwGXJrWsUNI/YHZrHQkO
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
D51XaOB/quqB1w==
          "]]}, Annotation[#, "Charting`Private`Tag$5847#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUl3c81e8bxrNHxjmOeY6GvdfZQ9w0ZJRKFG1FJSWlUkrSQiglpAhJSCUV
3zTcpSQVyUjKihQJ2Rr6Pb+/vN6vcz73c93XdT2fl6PjG7TMT3zatGlPJKdN
+//fsdaXz/RPZdtNKAc/+2uW8Lg+XXO/Q1OkvdKZQRZbc2MZqNX4ajadtY8O
fOM6XXN32d4l+e8lmrLs3+pmGoxpHC2j9mucnXxfZP8xfPrhAY1zZW0PFweN
vH9q/0A+a8mIxpWyBfq9LT/fv7Mv1T5lMUvzTtnke975wfef7bdbuR14o1le
Vj73WnZt1rB9blZ1hWJPXZl22/1uX/O/9o39dClGSkuZauC6fJm5EnDb9vGn
TdGdZWdtFjxY7CkLLrLfGyaufCv7kGKNPymKcHxo9rmu5T/KTmUfrhHXosL2
0gmDDcY/yzQSO6PPpdEgYNW6U0cTh8tOLne2ezemBt/FtN6s6Bwt2y3IXPcy
UhNUO+I966MmyuYN/Dqwo5MOOaZDDTZ6v8uO2C7dQOfPgKAMZbWpK3/LhDcv
3A0vmwUpn1Jn3JSahoETPyMqFXWAXp/yw0xeDIXB/urdKjpwm7JY7baSGMr2
Nl+X0NQBj0UPf/NpYnj1Y3mjna4O5E7RVi3VFsPWx+fN73F1YNfDyIocSzF0
Py5oylynA2zqIvlxDzFkqhyxCrutA6VVFy8UZorhpBml1cJTF3jHldOM3MRx
LI1+hOWjC7UbKoNLlorjiLKBvmCdLsyXLtJzWyGO/cOCgHlbdaHG4sHgUV9x
/Pxg45jPIV04HKJSZ7ZfHKtcS5SirupC8ztrgyXXxDF121r7z6O68CSwMNZH
WgJtrxdkJCXpwZ7Qr81VlRL4cfb1y/Mv6sH3jLJK/2oJPJCUlz5yWQ9Oh811
mVYvgSVHci4ty9ODvtXPd5i1SSBzZUaK0kM9KKWIzVs7KoEmUolnTnTowT4u
97iWjiSqrwuL2GuuD4FvVATKeyTxXv3+wwY2+tAhn79o1gFJXO4SGl7P0Ye8
yk+uJocl8Sxnz0GmvT7Ese8UmUZLoqJCUGj/Un34qtI40H5JEiXv++7036cP
Y2EBR5XKJfGnist6r6f6MJ9SrW0nL4VNgbpvA17oQzinqr5WSQqx4pf94df6
kDRyvXgNTQrPHLg+K7dRHx55bLNdqy2F1p8V2iZ79WHmazsfSUsp3HG7Zk0a
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
mjJCqL+qUFdK+i0enDcZLCeEaX9Uc/YSP4dnDma+mi6EiW/GjZtJv7tec10M
lIQgu8GjKZ7k0Xjg0FA4RQh6CR9GvpP8Shvl5zLVhCD4opC/kPSj4NjS76c0
hNCXV9LtJEbHdGbKuS9aQlhUWn7yoCQdj8QbdKXMFELAsYUrj06n4y7bwNih
2UKwst10zUOZjpt6i9huekLYoR1f7Emj48IFcPyfkRBOhMdX9DDoKBw5YeFt
KgSPSJms0Nl0NM9601BkLgSHvFNvmQZ0VJ7yMfS3EYK7XouYjhUdG+/tefFa
KIT0Aw/is+fRcaPBdbnURUIwfwIeNbvpeOD52gDDJUIYbJ6Yu/oAHc/4qbwq
WiYES7Ur8l8i6Pjw6v7YVyuEcCvkeWdTHB1VDRcq/90ghBBG6L03OXQ0rfgd
FL2JPO+ya0VZAR3B/9Zbtc1C2PnnwJGYIjpuz1E/axkohB/2qTLpj+h4bEHV
UOkOIQibTnm2PaVjavchD6dgov9Ca933F3SsMPyiun6vEJTyLzzyqaXjp4qU
PX2hQrijwcsoaaDjkL9bY2gYmR8tKd7wgY6yMtN4UuFCYJTodBW20HHWtTvJ
CRFCSFYKv+jcQUeu0+aJGUeF0GHleyeti45uX+ne+ceFIPlGak7BVzr6nqy+
z40SwlXKqdiQXjqGGkXSy2NIPxwNFMf66Bj/ghPmHieEmM5/160H6Ji9uefj
x9NCsB/6+17/Jx1LZdJst5wVgtk+CaO6ITrWXluSNpIoBLvfc9fajtDxm5Pk
VESyEArnlnVsGKXj1NeStYqpQsjZTt8+f4z4GbWt7MIlIRwWd3vxjbCp8azZ
hpeFMBx5Q2rxOPGz8l1EUaYQdBrMOvYR9tpyosMuWwg359SZbyUcKCt0fJUj
hBm/fSr0CR/N/ZG1Io/4W68hfpPMS12YKdF1nfhpGJAoS7jw2/JNO28KoYul
YM0neiqiZJ//KRSC8yfWWSB6Pxk/NIi+I4Q2LR0Jw2Hid2XQCbViIXiuLBnp
I/vKbtX7mvkfyWNmw50Lg3Tk5MXklj4Swu1K9XnFP4hfJt5mfS+EUKJ9RzqC
+Jv9UiE2tEoIpdyBmrEvxK+t2Cf5Rgjj0o1PQkkeb+VCFiXUCOHFu7o98p10
/JpndHPGOyHMT/l7qJDkN+X8USm/XgjNG9wgqJ341RsfxH1P9BaMKrq2Eb9i
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
VQb94cEh/wHtoWvA
          "]]}, Annotation[#, "Charting`Private`Tag$5847#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 30}, {-44.4211266226199, 44.25613068300624}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\[Theta]1", "\[Theta]2", 
       SuperscriptBox["\[Theta]1", "\[Prime]", MultilineFunction -> None], 
       SuperscriptBox["\[Theta]2", "\[Prime]", MultilineFunction -> None]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9646612053101673`*^9, {3.9646614466852303`*^9, 3.9646614622475986`*^9}, {
   3.964661494253357*^9, 3.9646615180070343`*^9}, {3.9646615536543903`*^9, 
   3.964661573781042*^9}, 3.9646620383881435`*^9, 3.964662108636444*^9, 
   3.965112179110676*^9, 3.965112258481447*^9, 3.9651807876585445`*^9, 
   3.965702397617367*^9, 3.9657872490214386`*^9, 3.9657888788870296`*^9, 
   3.9658014089902344`*^9, 3.965869706081316*^9, 3.9658703456199703`*^9, 
   3.9658704875963*^9, 3.9658705606731205`*^9, 3.9658706755793705`*^9, 
   3.965870757815819*^9, 3.9658717430971527`*^9, 3.965871804426319*^9, 
   3.9659601116804085`*^9, 3.9663055969189796`*^9, 3.966306595546316*^9, 
   3.9663068428018665`*^9, 3.9663071435588913`*^9, 3.966307323046524*^9, 
   3.9663089739228344`*^9, {3.9663091441970997`*^9, 3.966309188059475*^9}, {
   3.9663092690458755`*^9, 3.966309287358675*^9}, {3.966309345156288*^9, 
   3.9663093618783417`*^9}, {3.9663094035729733`*^9, 3.966309410664711*^9}, {
   3.9663094499600983`*^9, 3.9663094714747047`*^9}, 3.966309556177149*^9, 
   3.9663175737295494`*^9, 3.966317718921295*^9, 3.96631778194207*^9, 
   3.9663178239761314`*^9, 3.966477072031107*^9, 3.966479598989149*^9, {
   3.9664808171674976`*^9, 3.9664808345889225`*^9}, 3.966494008179163*^9, 
   3.966495738818369*^9, 3.96651770739727*^9, 3.9666013501971207`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"109ddef3-d10b-47b1-b6f8-fb2fe6e892f8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6/a7WLoBG/4HRzztjQ==
          "]]}, Annotation[#, "Charting`Private`Tag$6117#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 30}, {-8828.69963998321, 0.29999999999468924`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"d3"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 TemplateBox[<|
                  "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9646612053101673`*^9, {3.9646614466852303`*^9, 3.9646614622475986`*^9}, {
   3.964661494253357*^9, 3.9646615180070343`*^9}, {3.9646615536543903`*^9, 
   3.964661573781042*^9}, 3.9646620383881435`*^9, 3.964662108636444*^9, 
   3.965112179110676*^9, 3.965112258481447*^9, 3.9651807876585445`*^9, 
   3.965702397617367*^9, 3.9657872490214386`*^9, 3.9657888788870296`*^9, 
   3.9658014089902344`*^9, 3.965869706081316*^9, 3.9658703456199703`*^9, 
   3.9658704875963*^9, 3.9658705606731205`*^9, 3.9658706755793705`*^9, 
   3.965870757815819*^9, 3.9658717430971527`*^9, 3.965871804426319*^9, 
   3.9659601116804085`*^9, 3.9663055969189796`*^9, 3.966306595546316*^9, 
   3.9663068428018665`*^9, 3.9663071435588913`*^9, 3.966307323046524*^9, 
   3.9663089739228344`*^9, {3.9663091441970997`*^9, 3.966309188059475*^9}, {
   3.9663092690458755`*^9, 3.966309287358675*^9}, {3.966309345156288*^9, 
   3.9663093618783417`*^9}, {3.9663094035729733`*^9, 3.966309410664711*^9}, {
   3.9663094499600983`*^9, 3.9663094714747047`*^9}, 3.966309556177149*^9, 
   3.9663175737295494`*^9, 3.966317718921295*^9, 3.96631778194207*^9, 
   3.9663178239761314`*^9, 3.966477072031107*^9, 3.966479598989149*^9, {
   3.9664808171674976`*^9, 3.9664808345889225`*^9}, 3.966494008179163*^9, 
   3.966495738818369*^9, 3.96651770739727*^9, 3.966601350260194*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"75faa283-a3e7-41be-b8b0-4cc8ac5b6172"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Inverse", " ", "Dynamics"}], " ", "&"}], " ", "Tragectory", " ",
     "Planning"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"subsxy", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "->", 
        RowBox[{"x", "[", "t", "]"}]}], ",", 
       RowBox[{"y", "->", 
        RowBox[{"y", "[", "t", "]"}]}], ",", 
       RowBox[{"z", "->", 
        RowBox[{"z", "[", "t", "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"th1exp", "=", 
     RowBox[{"2", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "l1", " ", "y"}], "-", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"16", " ", 
              SuperscriptBox["l1", "2"], " ", 
              SuperscriptBox["y", "2"]}], "-", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["l1", "2"], "-", 
                SuperscriptBox["l2", "2"], "-", 
                RowBox[{"2", " ", "l1", " ", "x"}], "+", 
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["l1", "2"], "-", 
                SuperscriptBox["l2", "2"], "+", 
                RowBox[{"2", " ", "l1", " ", "x"}], "+", 
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["l1", "2"], "-", 
            SuperscriptBox["l2", "2"], "+", 
            RowBox[{"2", " ", "l1", " ", "x"}], "+", 
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}], ")"}]}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vth1", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"th1exp", "/.", "subsxy"}], ")"}], ",", "t"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vvth1", "=", 
     RowBox[{"D", "[", 
      RowBox[{"vth1", ",", "t"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"th2exp", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "th1exp"}], "+", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"x", "-", 
           RowBox[{"l1", " ", 
            RowBox[{"Cos", "[", "th1exp", "]"}]}]}], "l2"], ",", 
         FractionBox[
          RowBox[{"y", "-", 
           RowBox[{"l1", " ", 
            RowBox[{"Sin", "[", "th1exp", "]"}]}]}], "l2"]}], "]"}]}], 
      ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vth2", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"th2exp", "/.", "subsxy"}], ")"}], ",", "t"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vvth2", "=", 
     RowBox[{"D", "[", 
      RowBox[{"vth2", ",", "t"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"d3exp", "=", 
     RowBox[{
      RowBox[{"-", "b1"}], "-", "b2", "+", "z"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vd3", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d3exp", "/.", "subsxy"}], ")"}], ",", "t"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vvd3", "=", 
     RowBox[{"D", "[", 
      RowBox[{"vd3", ",", "t"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"theta", "=", 
     RowBox[{"a0", "+", 
      RowBox[{"a1", " ", "t"}], "+", 
      RowBox[{"a2", " ", 
       RowBox[{"t", "^", "2"}]}], "+", 
      RowBox[{"a3", " ", 
       RowBox[{"t", "^", "3"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"traj", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x0", "+", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "theta", "]"}]}]}], ",", 
       RowBox[{"y0", "+", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "theta", "]"}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta0", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a0", "+", 
        RowBox[{"a1", " ", "t"}], "+", 
        RowBox[{"a2", " ", 
         RowBox[{"t", "^", "2"}]}], "+", 
        RowBox[{"a3", " ", 
         RowBox[{"t", "^", "3"}]}]}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{"t", "->", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thetatf", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a0", "+", 
          RowBox[{"a1", " ", "t"}], "+", 
          RowBox[{"a2", " ", 
           RowBox[{"t", "^", "2"}]}], "+", 
          RowBox[{"a3", " ", 
           RowBox[{"t", "^", "3"}]}]}], ")"}], "/.", 
        RowBox[{"{", 
         RowBox[{"t", "->", "tf"}], "}"}]}], ")"}], "-", 
      RowBox[{"2", "Pi"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dtheta", "=", 
     RowBox[{"D", "[", 
      RowBox[{"theta", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dtheta0", "=", 
     RowBox[{"dtheta", "/.", 
      RowBox[{"{", 
       RowBox[{"t", "->", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dthetatf", "=", 
     RowBox[{"dtheta", "/.", 
      RowBox[{"{", 
       RowBox[{"t", "->", "tf"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"trajparam", "=", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"theta0", ",", "thetatf", ",", "dtheta0", ",", "dthetatf"}], 
         "}"}], "==", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"a0", ",", "a1", ",", "a2", ",", "a3"}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"TF", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"trajval", "=", 
    RowBox[{
     RowBox[{"traj", "/.", "trajparam"}], "/.", 
     RowBox[{"{", 
      RowBox[{"tf", "->", "TF"}], "}"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.965182004691862*^9, 3.965182009009367*^9}, {
   3.965186619818989*^9, 3.9651866671250267`*^9}, {3.9651870790681*^9, 
   3.9651870845228634`*^9}, {3.965189351702194*^9, 3.965189394663946*^9}, {
   3.965189488207386*^9, 3.9651895001598873`*^9}, {3.965189752523283*^9, 
   3.9651897589133377`*^9}, {3.965189825019924*^9, 3.965189835147724*^9}, {
   3.965191062573494*^9, 3.9651910628371334`*^9}, {3.9657023558205166`*^9, 
   3.965702357510391*^9}, {3.9658697225695076`*^9, 3.965869747197777*^9}, 
   3.9658698815125694`*^9, {3.96586993151375*^9, 3.965869962525507*^9}, {
   3.965870136032383*^9, 3.9658702296628532`*^9}, {3.965870262451191*^9, 
   3.965870302850521*^9}, {3.965870416683481*^9, 3.965870466872137*^9}, {
   3.9658705224394035`*^9, 3.9658705429643097`*^9}, {3.9658705963232384`*^9, 
   3.9658706471630898`*^9}, {3.9658707158940754`*^9, 
   3.9658707383778954`*^9}, {3.965870778616247*^9, 3.9658708059688416`*^9}, {
   3.965870887878132*^9, 3.9658708897956696`*^9}, {3.9658712426275635`*^9, 
   3.965871345237131*^9}, {3.965871384576996*^9, 3.9658714118887653`*^9}, {
   3.965871464908268*^9, 3.965871546438547*^9}, {3.9658717166474075`*^9, 
   3.965871720155361*^9}, {3.965871757929287*^9, 3.9658717687065067`*^9}, {
   3.9658718700103683`*^9, 3.965872017424486*^9}, {3.965872078011841*^9, 
   3.9658720953866863`*^9}, {3.965872129305599*^9, 3.9658721579427395`*^9}, {
   3.965872204226759*^9, 3.965872271344387*^9}, {3.965872550086714*^9, 
   3.965872617778261*^9}, {3.965872719802328*^9, 3.9658727231635494`*^9}, {
   3.9658727644454937`*^9, 3.9658727681267185`*^9}, {3.9658731958169956`*^9, 
   3.965873208928831*^9}, {3.9658733944044323`*^9, 3.965873579817745*^9}, 
   3.965884366372116*^9, {3.965885441140579*^9, 3.965885471620949*^9}, 
   3.9658858402680206`*^9, 3.9658865021557274`*^9, 3.965886553722908*^9, 
   3.9658868632117157`*^9, {3.9658869546360874`*^9, 3.9658869596887856`*^9}, {
   3.9658871176776104`*^9, 3.965887118662672*^9}, 3.965965835905964*^9, 
   3.9659660739072456`*^9, {3.96596625739534*^9, 3.9659662660399914`*^9}, 
   3.9664806859681416`*^9, 3.96648078338842*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"9f160ca8-142c-bb47-bbec-de5c78aeea9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a0", "\[Rule]", "0"}], ",", 
   RowBox[{"a1", "\[Rule]", "0"}], ",", 
   RowBox[{"a2", "\[Rule]", 
    FractionBox[
     RowBox[{"6", " ", "\[Pi]"}], 
     SuperscriptBox["tf", "2"]]}], ",", 
   RowBox[{"a3", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", "\[Pi]"}], 
      SuperscriptBox["tf", "3"]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.965884746012789*^9, 3.965884778576908*^9}, 
   3.965887259830124*^9, 3.9659601122827473`*^9, {3.9659654851028004`*^9, 
   3.965965493392868*^9}, {3.965965565523443*^9, 3.9659655732885075`*^9}, 
   3.9663055975540295`*^9, 3.966306614161585*^9, 3.9663068652406616`*^9, 
   3.9663071509257717`*^9, 3.9663073377035694`*^9, 3.966317523183298*^9, 
   3.966317574373886*^9, 3.9663177197285023`*^9, 3.966317782628868*^9, 
   3.9663178246463547`*^9, 3.9664770724782104`*^9, 3.9664795997728214`*^9, 
   3.966480785438307*^9, 3.9664940089551945`*^9, 3.966517707564472*^9, 
   3.966601350355086*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"ac3b579f-0ee6-43a6-a0db-23a088eb98f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.2`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.5`", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Pi]", " ", 
         SuperscriptBox["t", "2"]}], "50"], "-", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["t", "3"]}], "250"]}], "]"}]}]}], ",", 
   RowBox[{"0.3`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.5`", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Pi]", " ", 
         SuperscriptBox["t", "2"]}], "50"], "-", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["t", "3"]}], "250"]}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.965884746012789*^9, 3.965884778576908*^9}, 
   3.965887259830124*^9, 3.9659601122827473`*^9, {3.9659654851028004`*^9, 
   3.965965493392868*^9}, {3.965965565523443*^9, 3.9659655732885075`*^9}, 
   3.9663055975540295`*^9, 3.966306614161585*^9, 3.9663068652406616`*^9, 
   3.9663071509257717`*^9, 3.9663073377035694`*^9, 3.966317523183298*^9, 
   3.966317574373886*^9, 3.9663177197285023`*^9, 3.966317782628868*^9, 
   3.9663178246463547`*^9, 3.9664770724782104`*^9, 3.9664795997728214`*^9, 
   3.966480785438307*^9, 3.9664940089551945`*^9, 3.966517707564472*^9, 
   3.9666013503710203`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"e70f15d2-4496-4147-978b-ecf14bfd28e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xtraj", "=", 
   RowBox[{"trajval", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dxtraj", "=", 
   RowBox[{"D", "[", 
    RowBox[{"xtraj", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddxtraj", "=", 
   RowBox[{"D", "[", 
    RowBox[{"dxtraj", ",", "t"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ytraj", "=", 
   RowBox[{"trajval", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dytraj", "=", 
   RowBox[{"D", "[", 
    RowBox[{"ytraj", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddytraj", "=", 
   RowBox[{"D", "[", 
    RowBox[{"dytraj", ",", "t"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"iktrj", "=", 
   RowBox[{
    RowBox[{"ikSCARA1", "[", 
     RowBox[{
     "x", ",", "y", ",", "z", ",", "\[Theta]1", ",", "\[Theta]2", ",", "d3", 
      ",", "Teff", ",", 
      RowBox[{"trajval", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"trajval", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", "0.4"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"iktrjt", "=", 
   RowBox[{"iktrj", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]1", "->", 
       RowBox[{"\[Theta]1", "[", "t", "]"}]}], ",", 
      RowBox[{"\[Theta]2", "->", 
       RowBox[{"\[Theta]2", "[", "t", "]"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"iktrj", "/.", 
     RowBox[{"{", 
      RowBox[{"t", "->", "ii"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "0", ",", "TF", ",", "0.1"}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"theta1dot", "=", 
   RowBox[{
    RowBox[{"vth1", "/.", "geomparams"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "->", "xtraj"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], "->", "ytraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "->", "dxtraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], "->", "dytraj"}]}], "}"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"theta2dot", "=", 
   RowBox[{
    RowBox[{"vth2", "/.", "geomparams"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "->", "xtraj"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], "->", "ytraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "->", "dxtraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], "->", "dytraj"}]}], "}"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"theta1ddot", "=", 
   RowBox[{
    RowBox[{"vvth1", "/.", "geomparams"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "->", "xtraj"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], "->", "ytraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "->", "dxtraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], "->", "dytraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "->", "ddxtraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "t", "]"}], "->", "ddytraj"}]}], "}"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"theta2ddot", "=", 
   RowBox[{
    RowBox[{"vvth2", "/.", "geomparams"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "->", "xtraj"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], "->", "ytraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "->", "dxtraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], "->", "dytraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "->", "ddxtraj"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "t", "]"}], "->", "ddytraj"}]}], "}"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"tauinv1", "=", 
   RowBox[{
    RowBox[{"eqdyn1", "/.", "iktrjt"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "->", "theta1dot"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "->", "theta1ddot"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "->", "theta2dot"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "->", "theta2ddot"}]}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tauinv2", "=", 
   RowBox[{
    RowBox[{"eqdyn2", "/.", "iktrjt"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "->", "theta1dot"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "->", "theta1ddot"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "->", "theta2dot"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "->", "theta2ddot"}]}], 
     "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tauinva", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tauinv1", "/.", 
      RowBox[{"{", 
       RowBox[{"t", "->", "ii"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "TF", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tauinvb", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tauinv2", "/.", 
      RowBox[{"{", 
       RowBox[{"t", "->", "ii"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "TF", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"tauinva", ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"tauinvb", ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9658856956162586`*^9, 3.965885740230173*^9}, {
   3.9658875888108807`*^9, 3.965887594288391*^9}, {3.9659656100031967`*^9, 
   3.965965616599539*^9}, 3.9663184368159237`*^9, {3.9663185224627*^9, 
   3.966318534408861*^9}, {3.966480580313076*^9, 3.9664806325925694`*^9}, {
   3.9664950276141796`*^9, 3.9664950393632565`*^9}, {3.9664955748556423`*^9, 
   3.9664955805620766`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"5d20443a-811c-0c44-877b-16d47b5701ac"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
6P+fn/9/cvZwqQ==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1001.}, {-81.51662170564126, 46.197285283915484`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9664807528398914`*^9, 3.9664940830079975`*^9, 
  3.9664951157172356`*^9, 3.9664956535983276`*^9, 3.9665177666062207`*^9, 
  3.9666014043943586`*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"983b74bf-a4bf-4423-b68b-5aa938cef8db"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw923k8VG0bB/CJFlkKbdqklVBpV1l+aZM2pYSKiciWfRn7mBlmxjKUlFBp
pVJZIu1TKdJGEu2ipKSmTYvU6/3MdZ7nn+fzfW73ueY6v3Pf5z5/PKOdfde4
KrBYrHeKLNb//y3/R2beUPGoZLjOaXP6D6jmru6Vrs5YCcbHOJ4vezBWR7T/
r7xfX0+RB+KYLDmnqYWxFjhjDy/f84TxCOz36ls+4j5jHdSEZBp7lzMeg9PR
PzrizzMehylVJm7ehYwnYBr7Sp8RxxjrYcCzuyHpBxjrY/maYPeGTMaG2DvH
6sTrnYwnI3npTN3zKYyNYLtg4XO7RMZTkbAn+q1UyHgaNNsvcb4IGE9HsG3C
s3Ye4xlwDfgdUhzLeCYuGewuX/CfZ8HNZIHD/v88G9OdJry5+d98Y0yYkq1/
4b/rz8GBgglKUf/Vn4tA7pZAtf9+3zz8yVMO3/bf7zfBsuFN8/f9158pim9X
Kh34r38zmAWUjgv97/6YI+dLueKY/+4f8NDDxPAQc3+5wOTWgyZ//rv/83Gv
4X7b5BvM+HzkD1fsa1rNjFvApf5fhN4zZtwC2UoGi762MuMLsPbhyaj9Hcz4
AugdzVo/pRfz/CzELJ0R2kcGkrkLse5txkzF8cz4Iiit/jR8+SxmfBFcFI+6
8yyZ8cXQFE+4m7eBGV+MAR9+D7zmy4wvwYtN/SfUCJjxJdDs/MF6nMmMW+Js
2dyrzwqZcUssid+79+UtZnwpRhZzWl83MeNL8SlPTV32hxm3gr2i/yoF1QIa
t8KcXf21Bwwjs5YhbkLnunw9ZnwZCoQ9W+/PZsaXY4tXW23MEmZ8Odw379a7
vJ4ZX4HIeTY9k92Z8RXQbVRO/xjGjK/E+/RErTeJzPhKaFfffBawjxlfhYHi
IcgsZMZXwXxaQuGmG8y4NcyW6BZeeUyGNbKSUH3tI/P31tDtc7XQo2eh3FJr
WJbEKJ8dRmatxu8h6QdOTiVjNW7sLLa2XkrmrkbUZV7Pg5uZ+atxSNJ18Ug4
M38NDPbWJjvuZOavgYx9d9/9U8z8NZgYP93wzy1m/hpkuc0Rvn3DzLdB+inP
wekKRTTfBjYmI2yVdMhcGyQtbGxYaEaW2uBERdeSlZvIrLUwdG1z0Yti5q/F
ol13e9bvZeavhd3Gn8McrzDz12K8T9Dpq6+Y+etQ3i583atXMc1fh9uFFh2T
J5K569DToN+8+SvJ0m5/xrj5QWSWLRo7S8ymZzHzbZGbvnX6iOvMfFuYKPWr
ZH1g5ttCuf+1l28GnaH56/FE41BENchYD2PD2As3vMnc9cjsmfiiag9Zuh5B
wf8WvKlg5tvhRZ9mr2E/mPl2mGR27oevbgnNt8OE/Pkn2uzIUjuUPDLelpZI
ZtmjvG6E5bYrZNij/cR3z5hvzHx7HFg2Wr9av5Tm20NmPJbl5kxmOWBbaahk
SRYZDrjl6bkvoo7MdcC5LbLRfTXO0nwHVDrHzfixgszagIlQHbEiiYwN2Mwu
Wqp5h8zdgLBvdQ4r1cpo/gY0tX4c2teazNqIJcvDY6x2krERo76/LRr2hMzd
CAvdBBXe6HM0fyOcvsdriD3JrE3IUL8dbVxCxiYYF3eZ7+lxnuZvAtsqOPjM
KrJ0E+aFGQal7SezHPGqz9mb5p/JcMTlxbMmX194geY7Yrfz8kO6mWSpI4qH
91sf+pnMckLd4i/FF60u0nwn5PtddlQ4SuY6IeKj72wbxUs03wmFmToO553J
LDZWeraMWlBO1mEj7kf+qF+6l+l6bAzrpzSlNZnMZkNrxl/nER1kLhtRGlXq
B9lX5M5hY3vS9ntxd8lSNoyOKc311JbK3ciGd9ne5BXryazNyKh0SQ3cTtbZ
DN5+e83mO2Rsxofldr0O9b1K9TfDtBZR55eQuZux3mhUgZGQnLMZydfnd6hW
kqWboctaWGWrfI3qb8YlS5Vbg1aSWc44delM4eo0so4zHM8GuGo+IcMZR1Ls
3jqNuU71nXFz6YCNFt5krjOupiX3vXaWnOMMBUGU7due5VTfGd/YT26dtyE3
OqNfrrHyosNklgtsPZSfSzrIOi4Yq3Ft/AGrG1TfBRYuda8FOWS2C8Zn75u1
4CeZ64KdNkPXvFl9k+q7YK+UIww6SZa64FPDTrPfyhVU3wWXjxl8j/Eks7Yg
ZdI3k/53yDpbYHk95lzhlEqqvwU11m9H+qeT2Vsg7IL++i4ydwvybZ/mbdt6
i+pvwdKdc70u15KlWzA96+FiG4sqqr8Fky1EGrOKySxXSJbc2es34TbVd0Wn
9Y5S1WwyXPHM7MmwgQPvUH1XBPf9wkmVkLmumGHn6JGocpfqu0K3Y6tHv0Sy
tNtLrerGqN2j+q6oaf/7qmY7meUGi9yDu8YNvU/13SB66Xtj7CEy3DCOP17h
w5Bqqu+GjgM+Dw47kbluyOw70laaR85xw5AlvV0tvpKlbvhQdjh3snkN1XeD
UdrUHaIkMmsr3p6NdrJ5StbZihLXFJUdBg+o/la4//64YkkUmb0V0xffSAuu
JnO34tHsvF/a42up/lbk/tFftCiCLN2KQaoGL949IDduRdnfpxVqhg+pvjsG
x6btKYwn67jjxNT1oXVNZLhjx5XJymGoo/ruGD/blJO1n8ztnt/nyMZ5rEdU
3x0+P+ZesXUmS93xRlFNte0GudEdadXXlL/r11N9D5wwf1Hnt52s44G5Sc01
9r/I8MDQGf6Hjzs3UH0PWLRZG2y6S+Z6IO1OYqDnnMdU3wMqf5IKqo6SpR7Q
+O44PXjQE6rvgWMV6s7sODLLE4vSV5+O7SDreGLn4dU77ro/pfqeUPD+FT37
GZntiUky4YtC62dU3xPHbh5XmnyTnOOJi1/HmGabPKf6nijJU97XVkxu9MS3
Q9X6yoYvqL4XNHb8vfD6MFnHC08sG/+5ab+k+l6oVxnDicggs73AH2p2Ma5v
I9X3wvf589P+LSbneKEx1/bSPgFZ6gX9DrvRttfIjd3XL96vqcV6RfW98SV3
j80jU7KON2Q7DIfyIsjwhtOlpn6q58hsb6S3tm/Y0kHmeqN9UO9j4dObqL43
Xq+dqGvmR5Z649Ym7N6bT270Bs/w+BphK5m1DamDT699N7aZ6m+DsPPxwkJH
Mrbhz/QZvDsZZPY26N12nKL3gMzdhjOOseaFyq+p/jYMlPYUrLUgS7dh3Xi1
C3855MZtUN9yZF/2KTLLB2muCd+GNZN1fJB7gb/PbfAbqt9tjRknvC3JbB+w
R1ltHRZG5vpgW/1Pn0155BwfONzOujL2EVnqA7M5Xrc2KLRQfR8UtY+O/WZI
Zvli4YQQ/+fryDq+aG9fdKd3FBm+mKS+PmLzQTLbFyUXEoxe3iBzffF7oWtw
wFtyji/EU2+f69fnLdX3hcHtus1548iN3fXaDz6YATLLD3dSe0Uftyer+0F6
5e8Hlj9Zxw/vNd9VGsWTjfywOWtB8/Q9ZPjBbYSqSa/jZGs/+Bdm9T5QRmb7
Ic/xT37PG2Q/P1QlFNZMvk/m+iH0p2zVqHpyqh+mea6YW/+MnOOHK4X19XaN
5AI/7HO7vD/3FdOfH/KfhU6vZMar/WAxLm699DnTrx+ePXz5flcDWeYHnxG6
z21qmP79ofjn4FhWJdO/P8aXzTp55CLTvz/sV25at+o0078/vIyWP1LKYfr3
R0iW/fkXEqZ/f5zOLF/+IoLp3x8XR3eJB21l+vfvXn8J/dOsmf79UXnhtIqb
MdO/P5qGvjXcp830748D8Xbblyky/fsjYJ5TaXQL5S31R1qbibtlJbnaH/dj
NIrO5THPmz8CTSbfaxaSZf5oG/x4cIMr8/wFYHDHjh+5FmT1ABgmfn6xRZt5
HgPQ22r4VJ1f9DwbBaDp/ee5bQ+Y9RGAgivfx9efIFsH4I3m+w/f+Mx6CcCO
61i9bgPZLwAVW1bXKE1j1k8ALq9y3D9KiZwagD/O7nuOPWfWcwB6SKrnlxaR
CwIwo668bK2QWd8BmDAuuDRtA7k6AJuGqMTHTmHWewBmP3HsYahIlgXg1Ern
5JxHtH+wAnH089whH46R1QORt0xBc3gUsx8Fgm8yLniONdkoEEv7rbmwhtmv
EIgFHawm/w7az6wDcS7a0+PALTI7EG0Wvda1ZZP9ArHJ09vQntkfuYEod8v/
83UBOTUQyofa7MuHMPtpILSU3TY/aKP9tiAQI1KLLoyXkqWBeGBitf/GTnJ1
IA4kW9aWeZAbA+G4dVNRL3OyLBDbjd9NKhrI7P9B8FxnUnP9Pb0f1IPg3/tr
uflVsk4Q5hq5P9DPIBsFQem98VaxLxlBOF1Rm+G0hGwdBIfe/fUKR5HZQTDw
4fVV/EzvL78gfLtXcDD3EJkbhGkODXfWrSenBiEsX5KvqUrOCcLPi3cam67S
+7EgCPwZ1eIqDlkaBL0rz1bdNSJXB0El7LHHx3fM+zYIOfoVh4wOk2VBWJWo
6rrLicwKRrPJrtLRI8jqwTA5Umn58DG9z3WCUTfdIux0BtkoGALWNrszdmQE
Y4PSy1PNQ8nWwXDOFimY/XdeCEbbs4Ks6/vJfsHgbZSKg7aQucH4Z/ok11qf
nBoMv7ULD6z/TOeRnO7xb/u+i86RC4Kx3rb9TzOPLA1GZLBv29YV5OpgeO1e
WTdgKHPeCYbSrpFFLW/oPCQLRuLcyeyXxWRWCK7/uJj7h0dWD8HkLd9MTW3I
OiGwfHarYv84slEIPlw682zMDzp/IQQ+BfP73qgiW4egxJ9fI9jPnNdCYLbP
uZgdTPbr/vu2u3rrlzPntxBoLb5zzG0cOTUETYsCTiV30fkvJwTbN10sqKon
F4Tgx6RVk0cUk6UhmGs76jg3hVwdgitDFE51eJMbQ3BpmN6dyGVkWQh0dvFz
NAyY82coLmkNf1CsQlYPxeMxVgOd2+m8qhOKmgsy3eHVZKNQuI5Oe/a8mIxQ
KOV5ahzLIFuHIqvevTQimswORcutSXfXupL9QsG//sVj+goyNxSevz3ODJ5F
Tg1Fvd/O1q5RzHk6FOIKyfpWZXJBKCY/X+de10Hnb2ko1FQFGeXN5OpQDLnf
J6qkhtwYimzJw2u5UrIsFLdWSaZkFZBZHKT8MjqYcoCszkH98+IBcWlkHQ4U
DI/vjognG3GQL2vcGBhOBgcOpp0nvX3J1hxYqqt92erKfC9w8Fcy86TrRrIf
B2dGz4l1W8t8P3DQ9nv4ZK8V5FQO9Ldf2hG0hJzDQb+U4JN8C3IBB2svFGXv
MWP65+DY2uz9Z+cx/XNQ5FQ6+OUcpn8OYpzEAg3GMg5Gf14hsWbMCkPc1ew/
e+cy/Yehn83Yi50mTP9hMFZyfOHFfP8YhWF06/pM2UKm/zBYbfdbkWTF9B8G
8X29yPmrmf7DwLbqeKBpz/QfBs1r2rqKzkz/YfizOit0kDfTfxiGTu35cXko
038YJnvFvcznM/2HYXW/53eNtzP9h6HZysX9G/M9Vh2G+0ojk5tPM/2HYVfg
46XKV5n+wzC894bn3rVM/+EYn5NU1v8t0384Ns+4HvOjk+k/HC4HVFUnajLP
fzhmrEjyPjaRef7DoTSq5W2UBfP8h8MxrKzrxEbm+Q/H2cfj3edwmOc/HD53
fUYapjPPfzj82rJXJzDrKbV7foo5x6GWef7D8W/QvMWHvjHPfzieuZwo9hrC
rP9wXBI86To/j1n/4XiJ5ccyNjPrPxzZgpd8VTGz/sPRLOqdq13ErP8IJBQM
Dq9/xqz/CPwcWnjGvC/tRzoRWNC+cDN7NtkoAntj8l9abGX2vwgM9Gx5K8tg
9r8I1Ja3JQXdYfa/CBRcPmze0IP2T78IGLz4UzOB+V7lRkDLXCvcK4CcGgHB
7BN1hSeZ79kImNUHt/dqIxdEoO32a+MgfWb/j8AgPD7Q15vZ/7vnb94jqj3N
7P8R+LOsreLld7Ksu1+9jedMzOh9w4rEKe+SOb9EZPVIhBkePDnuEVknEqLs
+N73xzPvv0jsbk6sUOIw779ISEVNys13mPdfJCzumgp9x9H7lB2JG0EJ6dJo
sl8kzgiaZ717SuZGwqCwYljXPHp/p0Ziz+wdR9T3k3MisUtn7g/jXnQeKIjE
xHcOXxJ9yNJIxF4WL9B5Sq6OxAmbqDPx45nv3UhMDTN5PtOJLItEy8qnxscz
yawoLDGMeCyrZ84/UXBSVF42ZAjzPRwF43c/dhvYkY2isO7PqJUmWcz3cRQE
NS18u0aydRRG56U+T9Flzn9R0JHW7PjCnPf8onBqTlbQ9ovM+S8KHV8mfI1S
pvNkahRmqC0aV+VAzonCw9Ptt0QnyQVR+FM71P6uAnP+jcLhp29Y+Q7M+TcK
nBesojklzPk3CrYXvSYkadL5WhYF7sWEd+cCyKxorNJMZj+pI6tHw3vdpNpe
Jsz5Pxojf9wNWneEbBQNYfO3bc0azPdPNLpm67dUxTLfP9EYM9Skn9535vsn
GuM73+trebdS/9EI5inmnGshc6OR3/Sm08D1HfUfDedVMYqpb8k50fCKunq5
j8976j8ajU9CBKU/ydJoaGxvUr0qbKP+o6Ek9gtaMfwD9R+N+qVHbfnFZFk0
npRNqEu0bqf+Y3Br7fZj27+Q1WMQObnXzKt7PlL/MQjoCEy1XPyJ+o9BRH7o
3vU/yYjBfuNqFXU7GfUfg7uJI2rfl5LZMahoMfvxSOsz9R+DrNvaNrIoMjcG
5c0+tTYt5NQY3Ity4I5a84X6j8HwnnbCgKvkghi8X6G1aNuMr9R/DFaPFa+a
eoJcHYO/y17GvBr/jfqPwcKgzD8HDpNl3fMLAxZk6H6n/rnoLBsxve0UWYmL
J9n3Bl6f20H3g4vpDl5Hlt4ma3GxeMNs7ePsH3R/uHgX8NVEo5Osx4VZ3Kxl
JzN/0v3iYpxWw7hT5r/kNuZijcls00XvyeDCN2H0oSOZv+W25OLc/EGKPVd3
0v3kwuJSSu4utT9y23EB+36h6dVkNhcv1mz4NCezS253Li6oFY284vmX7jcX
e6fMStts8U9uDhdL4tOOn1ZnQd4+F7dtNV938skiLooim6pmdpJTubiucH9R
dEgPuTO4EP12O9fxnZzDRb1t0CdpmILced3Xey389beHotwF3fMFrWq1EnIZ
F+mbRjo66fSUW8rFjPqpLTdKyZVcDPQqna63ppfc1Vxk73Iem/uF3MCFscGw
nc4ZveVu5KLj0Be1sAV95G7l4mvViQ19vpFlXAzY92qg3nEluX9yUfhSZchX
175ys2Kh0TKxLVJXWW6lWBRqXhn06CNZPRYWz+NWKl9UkVsrFn9u/skelaIq
t04svi85bjvIXU1uvVjcCzjR2bS4n9xGsRh8tK49xKC/3Max4NydHvNEWV1u
xOLviS638zyyZSwm1ml0mXeRrWMxdZisr2W4htx23fWPfDI8+ovMjoWTeWHG
2AhNud1jcXqbZX7UX7JfLMwVkt228AfIzYlFyhu9Qk7fgXJzYzFq78xYq1Sy
KBb3Rx+8bTtkkNypsZhrPnl5r33kjO7rXc/QPjp2sNw5sbigfVbfN5ecFws7
lRzXML0hchfEYt2tz22XjpDLYsHyze7U1NaSWxqL65zUR3qp5MpYrL9knxX/
m1wdi53eOuOFG4bK3RCLpI3P+9oWkhtjoXb0Se2HX+TW7vEv7Znq04fJLYtF
5UNTfWsH8s9YTNtyv1VhG5nFw4nLvjcs3clKPNjH7/BXWUpW56H9Rj+LHqpk
LR74FUeGFJ2kejo8jDg75EK0PlmPB84jFZ0T0fT7jXhYUFHUy/so9W/Mw9rX
dR4/99L9Ag9qxjnG+zfT/bXk4XLmAMmrdsrLmoeYkorz280pTzsevPUM+v6w
oeeDzcPX19GyttX0PLrzoMgLjuOE0/Pvx0PlVI7+Sx0FuTk8KFzaOzs4mfYn
Lg/WTQlLLK/S+0rEw47GzRtmO1+4Is+fh/LAhGbpaJncGTxs4s0bNH7xP7lz
eJDcLXbV4vaRyvPn4Qgn6sWnHf3lLuCh9PdyXvGrAXKX8VB12HSeZecQuaU8
+Pk7WJX0GSF3JQ/zznUsfvpjlNzVPEzTTntq+mK03A08hJZeHuFyaKzcjTxM
UGvbErxwvNytPFilPkuxuTBBbhkP66We65oU9OT+2X3/OP4lZkMmys3io/LG
rrcvv5OV+Mg3W7Xp6F59udX5CC9dYFDfz0BuLT6cpV0KvZaRdfhoDBLy360l
6/HBCwppmGZENuLj7dqP861e0fWM+ViXvXGK1jYy+AgebTOuqoHqW/KRfUB0
b+9EsjUfy/d9LyjeQr/fjt/9vuh38b1EV242H/o362bfyKd+3flYUVix3/Ya
3Q8/PjaOtBPMqR0nN4cP8bv8qUlNdP+4fAjnrCn78mWM3CI+tu7p+JHdm5zK
x0Tjnx6rRtH9z+DjVXb5rm1mOnLn8OH6K++YcpW23Hl87L9euOSM7ki5C/h4
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
8j8LWaqg
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1001.}, {-13.665844068799231`, 6.606456411035696}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9664807528398914`*^9, 3.9664940830079975`*^9, 
  3.9664951157172356`*^9, 3.9664956535983276`*^9, 3.9665177666062207`*^9, 
  3.966601404425598*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"08ffd117-1ac1-4fb8-b62f-6f5efe305e1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "*", 
   RowBox[{"Sqrt", "[", "500", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.9665181665554056`*^9, 3.966518178220028*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"702f4e08-c5d7-4af8-8ca0-15093d36e6ab"],

Cell[BoxData["44.721359549995796`"], "Output",
 CellChangeTimes->{{3.9665181703633385`*^9, 3.9665181787532043`*^9}, 
   3.9666014044884005`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"a0cc9777-3e66-4017-8e56-3083de3ae010"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"PD", " ", "Control"}], " ", "&"}], " ", "Validation"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"kpv", "=", "25000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Kp", "=", 
     RowBox[{"kpv", "*", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Kv", "=", 
     RowBox[{"2", "*", 
      RowBox[{"Sqrt", "[", "kpv", "]"}], "*", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Theta]des", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "/.", "iktrj"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"err", "=", 
     RowBox[{"\[Theta]des", "-", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]2", "[", "t", "]"}]}], "}"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Theta]dotdes", "=", 
     RowBox[{"D", "[", 
      RowBox[{"\[Theta]des", ",", "t"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"errdot", "=", 
     RowBox[{"\[Theta]dotdes", "-", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}]}], "}"}]}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"\[Tau]c", "=", 
     RowBox[{
      RowBox[{"Kp", ".", "err"}], "+", 
      RowBox[{"Kv", ".", "errdot"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"eqdyn1", ",", "eqdyn2"}], "}"}], "==", "\[Tau]c"}], ",", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "0", "]"}], "==", 
          RowBox[{"\[Pi]", "/", "4"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "0", "]"}], "==", 
          RowBox[{"\[Pi]", "/", "6"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "TF"}], "}"}], ",", 
       RowBox[{"Method", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}],
          "}"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
         RowBox[{"\[Theta]2", "[", "t", "]"}]}], "}"}], "/.", " ", "s1"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "TF"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}]}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"solList", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Inner", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"\[Theta]1", ",", "\[Theta]2", ",", "time"}], "}"}], "]"}],
          ",", "#", ",", "List"}], "]"}], "&"}], "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
            RowBox[{"\[Theta]2", "[", "t", "]"}], ",", "t"}], "}"}], "/.", 
          " ", 
          RowBox[{"s1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "TF", ",", "0.01"}], "}"}]}], "]"}]}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"descir", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"trajval", "/.", 
        RowBox[{"{", 
         RowBox[{"t", "->", "ii"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "0", ",", "TF", ",", "0.01"}], "}"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"cirpoints", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xpos", ",", "ypos"}], "}"}], "/.", "solList"}], "/.", 
      "geomparams"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plot1", "=", 
    RowBox[{"ListPlot", "[", "cirpoints", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"plot2", "=", 
     RowBox[{"ListPlot", "[", "descir", "]"}]}], ";"}], "\n", 
   RowBox[{"Show", "[", 
    RowBox[{"plot1", ",", "plot2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.965974185247513*^9, 3.9659742429930286`*^9}, {
   3.9663202008549767`*^9, 3.9663202140731144`*^9}, {3.9664796249196835`*^9, 
   3.9664796361419067`*^9}, 3.966480716018692*^9, 3.966495761614483*^9, 
   3.9664960496428146`*^9, 3.9665177950028515`*^9, {3.966517836714183*^9, 
   3.96651804675358*^9}, {3.9665181406083703`*^9, 3.966518142041396*^9}, {
   3.966518183919407*^9, 3.966518186569067*^9}, {3.9665182412122593`*^9, 
   3.9665183858266764`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"b9abc898-f00d-db42-a821-ab2f816479d3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVVnc8Vf8bt2eKe42r7CsaUhpGw+eRpKTSQFSyojISRUOLskpJsvKljJKZ
ee3PsffIDhmRIpmXa/vd3z/nvN6v5zzP8/487/dzzpG1vHn2KhsLC4s58/L/
+3+PLLlUrF9oGmv/PLckO4LKWmT0jWWuoynztGdBxDBaqyjylJG5h8yciokz
NoNofWD2V75OD+RO1k39ebEf/Uf4S3PK+CIn3qkN+052I6UJ61drtq+RvFzp
hwKbdvRjfeTqckcg8rTjfDM4/A3ZH7rjwJAOQzu0TI7+SC9FGa39sXTtCGRI
fJdup+egRTv9ninbKER6kGQRo/wZfWDt8WXofEQ1yhuSIoOv4iP1bzbPdUQj
mU3ZPfVhn/GfUN1i+vVY9DSWZUSyKAu/tF65NLMUhx7lRKu1uRbhXbsy5qf8
P6NClgP11+dLcMvStaBJ6S+Is7iseqNIBXatlNo1kZaAPm0ztFgOrMIb37bW
/tNOQsvbW18JudbgIjM/27G2ZPT+Eu/ehrJabLkN2P/apqJXbEIWw951mG3p
fiPd/Ssq8P0uy1NTh1v7DSXpOmnIXvxaqFdIHf5UsctuZn06Ovj4hPzySi2+
m8SfO92RjvLEKS5/+GuxXuAw1/SHDKR9WO3FqaZqLHG3+PzU9Uy0fhd5i5Fp
FR6/HBE9uTsL3Xi6XnompwIT2m6TE0tZaP+Ti3+CFstw4NazmhNl2UhH4HxX
n1Iptt6w4+W4Pw0ZwMVtty4VY+7un4r/pHMRr6quFeB83EkU3hn7k4sK960N
pr/IwQmfQkv/puUhCZMttKaILOz+0kXo7/18ZIN80+NW0vEp51NXRrULkFTP
8WPq2V+xzIWtySPrCtHHZFx9IiQZTx/iWPrTVojszfcrRjxJwGXUvmN/IotQ
r7L3OHlLPA7mzQv+bYsRbr2zo9vnE85003N2oRBIoZrKIhsehyNG1cRn3Alk
5rcYlX06Dj+/vJlwHiCQ5MGB0FRm3LGJZDutU4wMt3t1sN34hI21WdY7JxQj
N5ULcVsSP2PI/pc5tb4EKWT+lUzX+4K3bu2+eMulBH0Pbd7SsTcRkyKq2KY6
SlBq2rjHvGEyXlqf/cXpYCniSTw9Rn6fioeexhhMfihF0euO+gkvfMX19ADG
Tc4yFBNpJq+7OR1n2z6KnLhehk7qxNiG62XgqC47nZsNZWiRuGfoaJmJfU6a
jI3vLkd9X5erN9lm4VvE0beOIeXoaIqXz+q5bGy6Z+/+8aVyNJInqXp3Mw1r
f5IdcDCvQENaMn5jnTSsJL7B519ZBdp2TOEbzT4Hi7xcVnbYWona6QmmMv05
eHV1pG3MvxIpn6to0d6Ti3/f6nC3n65EvWB6mNU2FzcNlVHHjKrQfomn7/rd
c3GOcXqNXX4VCqv6Gjjvmos/1kTd+itdjXb2PfnXYpyL6aFZ2/peViON2Lno
UYlcfNS2drB5oRoZHHYyKKrNwWH7BiIqbGqQYQX50ONrOXiMnWGY11KDeCYl
Jm4waBg1r9uQArXI8DbrtSR3Gg78IFf1MbkW7VRkPwzL2Vj90Kn9vt516MAq
7UD/fBZ+wW89406vQ08t7fyQexbu/X4vycmiHkntuvvjEVcWVol/fdW6oR7t
c/Y8lhCWiZ+5xkldONCAWrk0rc6rZeKOI/kdJ+IbECtZryKkPwNvI38LQCKN
aPP+TjGJ4Az8cGD4+B6PRiTBe85P8kIGbkpdZlOcaETPvc+nuCpkYBLiNRNQ
bkL/5O78TmTJwAcUgvZ7Wzch2R5O4flf6dhaQFqM9X0TOkPj/WvSlo5f0b/M
3P/WhJx+NoZ9rE/HOd17m+jc31DfS+uDj5h4oAQnOWp+Q+qPjjT7taRjvgQ9
3z+3v6GvDX/NTXvT8d43bVctE7+h2+ZpHJ5j6djsrvnhnoFvKCV8mPi8nI69
r/yVMqI0I3Wfex1PBDLw16OuS42nmtGm4eyin5IZuGsHa+fx583orXXM/VKl
DMwu8jKzNL8Z6fcFuGlqZGClZdE3h6abESl6ZTb4cAY2GvzoQNvSgpTEF4U0
jmXgxzVKeipXWpD012e+ucczcHwaTSHxXQvK+Pn9WuvRDNwceph9c10Luj6X
mXsDZeClx/V9kWytyGuM9/7jPRlY3vZCAUWjFSmEufbtoWbgU6cGQwNvtqKz
TQyV0vUZ2G2f4511n1rR5g6XS4/m0vEHiYUzXj2tqPjYEZPKrnRcw/5MmYXc
hpLi3sSsK0jH9NH1/PePt6GpuXs1ZeHpWLI57PfM4zYUFnFV+4ZbOnb6kPrh
91gbaoh81GellI7Dvfc/tKC2o2lJS3oUZzoudSw36TZpR7o7abVve9PwmKGB
qmFAO3q7HBIeQUvDooe6SY0V7SjZ4d9p/jdpOCXVt9teuQtF1CzHROin4lHS
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
          "]]}, Annotation[#, "Charting`Private`Tag$6432#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmnk8lN8XxzHM2DMzmCHZRsqapSwt7hGyJK1UsmUJWbIVRSUVJSQlkWih
fEOylkKPXckuCaHGki1mUNb8nt8/vN6v5957zv2c87nPfV6vkXM+c8iNi4OD
4x7+5///H11yJmq63jLoCCrSO1Q5iGo6ZC2PynoiYq5alt84E63VVVyVlT2P
Mm/efejI+QsJJ5S85u+OQFPuzV8E0QR6hMXK8MjeRGrrj7z4ljOFVKdd49bc
byPpjy7aMcHT6Ltw2r+VrwnI9uHKTIPzDFJ4zqeztJyIvOBT0MWeGeS966zP
X5lk9Ev7T3WkOgsVdg5mzBmloq3sAyoj7iy05GXZx3JPRyHyQVvuxbLQY86+
m39NnqDz2jzF8xksZNx0Z+Ofr0/Re23bm9sKWOjXA9PKOc8MVPu3n3XjLQvF
uK7azS5nouPE7OOu71hIQ6NwgRX7AkU3bF1+VspCHcse92Zk/kOd9pWB2W9Y
6Fy9tMZ0/kv0aq7p3KViFpK829k4ZZSDNnb829tZyEIVDtHuk19yUW/f2NFN
ODsrA2HCPQ/pm1xKr8SZa/lCy1zYa6Qn82WhDp/fOWi9Yc4kHyl/MvTdhcd7
XqfhNStcgHhcVraJVrBQSI5AKftrAQoT44pSqmEhi4QRIvtxIZqwLA7f38hC
UiGVR1ieRYhiTt13oIOFMKPgmenlYiS0pzDi7xALJSgdMpiuKUEvn6JZxd8s
5LpOLeZ37Bu0geWZbvqXhUi9PzdNyZQisdrHBgm8bNSNlZ+d/FWKniacveMm
wkYvnz+onsh/hyz2tu++RGOjsJhA8sSF9yh9uES/agMbWQVYOY4blSGr6JB4
aQYbyR5Tyh0TLEcurqGnozaxEXsX9/KvL+Wo29f60V9lNqphDJj9SqtAUi+2
bPNTY6P7fO/uj7p/QBfpy71/1dmoKNgiIJCOIRVmpXLKFjZKHdeVmA3DkJAY
3+QpnK/bb8QCfmBo8Pt7a398vG8rxZ1tUokmg25BiyobHTXiEA54WYlMmiSd
H+DxoGSqiCVchTbvfRo3jOejpNR7wj+wCnn94CG2KrARJbWBi/W1Ct0rzGrx
k2OjZeGS//x2ViORt7c3DeL7G7ry7MDM42r0zabw31ZJNipxv5Q27VmDFg7N
8v6ksFF6j5fJmeYaNDQ0aO6wjo1u7Ds++VurFm3PIr0lCbKRP7bnrm9SLdI+
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
IgfO/wNUkhN5
          "]]}, Annotation[#, "Charting`Private`Tag$6432#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-4.575094324110501, 3.1369139715449874`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\[Theta]1", "\[Theta]2"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.965974601615593*^9, 3.966305652797512*^9, {3.966306773932535*^9, 
   3.9663067886911507`*^9}, 3.9663074517761364`*^9, 3.9663075412069607`*^9, 
   3.9663176495937023`*^9, 3.9663177251678486`*^9, 3.9663177836604156`*^9, 
   3.9663178256141396`*^9, 3.9663201002824764`*^9, 3.9664771555654716`*^9, 
   3.966479672714941*^9, 3.9664807646593647`*^9, 3.966494083533928*^9, 
   3.9664957627359047`*^9, 3.9664963259679966`*^9, {3.966517767106125*^9, 
   3.966517796602298*^9}, {3.9665178405465326`*^9, 3.9665180477700243`*^9}, 
   3.9665181432078495`*^9, 3.9665181875359344`*^9, {3.9665182754740033`*^9, 
   3.9665183868107333`*^9}, 3.9666014049186673`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"368fd9ce-40c8-4736-8269-2f57efbcd32a"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
AE2mZGM=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.6569333098763932, 0.8042739305139748}, {-0.2809376581079091,
    0.799984550182238}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.965974601615593*^9, 3.966305652797512*^9, {3.966306773932535*^9, 
   3.9663067886911507`*^9}, 3.9663074517761364`*^9, 3.9663075412069607`*^9, 
   3.9663176495937023`*^9, 3.9663177251678486`*^9, 3.9663177836604156`*^9, 
   3.9663178256141396`*^9, 3.9663201002824764`*^9, 3.9664771555654716`*^9, 
   3.966479672714941*^9, 3.9664807646593647`*^9, 3.966494083533928*^9, 
   3.9664957627359047`*^9, 3.9664963259679966`*^9, {3.966517767106125*^9, 
   3.966517796602298*^9}, {3.9665178405465326`*^9, 3.9665180477700243`*^9}, 
   3.9665181432078495`*^9, 3.9665181875359344`*^9, {3.9665182754740033`*^9, 
   3.9665183868107333`*^9}, 3.966601405029996*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"2624b6cc-6459-49bc-b22d-11ac77e7736b"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
AE2mZGM=
      "]]}, {{}, {}}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
05rhGc4PalwOuSlX3MzJFy6KFw5IqW/m5A+P2Pq/Hupq5uQTm3KiXvaxmzn5
RTr3YZ3AqWaQxPnGHjd+6+/zKRCF848OtyPJIkIU+IXzkWZS4meG11DgOs5P
9gTPo3soUP7lK4tXK5arUzj5y/NDXoJlOhQoxfnMQqPHJ90MKZz85hvm1DDz
BIWT70xb9j6Y35bCyX8a3GNIsK5QOPnQFeuE7NzcKZz8qPmnAe1SXwonX2rb
oONTEkjh5E8vbTaaux5B4eRTH9w5+bj/FYWTX80qH+Ge/47Cybc+SMhQ6cqi
QAPOv+p3+X63K6Rw8rFcvg5Sbyoo8B3nZxWigx7G1lM4+Vp59928h1sonPzt
1musK6ndFE4+19JdJKpigMLJ7+6kX7UKGqJw8r1cW8seC45ROPlf9JvGozNF
4eSDc+goQn6GAsM4P6z82kaqkvtfvvjE7kFnEV4qsU/9zR/zL3E6v0rgXz5Z
XEO9tWHZv/xyOfetp9tX/Ms3m+s+u2kq9i///Ox39ymZNf/y0Z/HUsWTpf7l
p5mu7r496//lq/12pF2rkP2Xv76nVI5Oyf/LZ2dEKmu/2/Qvv71B4Xr9m83/
8t21W4W0LLb8y3+3fb9vV6j8Lx9+X9RiPXnrv/y4z9qlB8JU/uXLC4Q2ZS7e
RoX/8udbsX7+fz1EWf8=
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.6569333098763932, 0.8042739305139748}, {-0.2809376581079091,
    0.799984550182238}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.965974601615593*^9, 3.966305652797512*^9, {3.966306773932535*^9, 
   3.9663067886911507`*^9}, 3.9663074517761364`*^9, 3.9663075412069607`*^9, 
   3.9663176495937023`*^9, 3.9663177251678486`*^9, 3.9663177836604156`*^9, 
   3.9663178256141396`*^9, 3.9663201002824764`*^9, 3.9664771555654716`*^9, 
   3.966479672714941*^9, 3.9664807646593647`*^9, 3.966494083533928*^9, 
   3.9664957627359047`*^9, 3.9664963259679966`*^9, {3.966517767106125*^9, 
   3.966517796602298*^9}, {3.9665178405465326`*^9, 3.9665180477700243`*^9}, 
   3.9665181432078495`*^9, 3.9665181875359344`*^9, {3.9665182754740033`*^9, 
   3.9665183868107333`*^9}, 3.966601405078323*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"7b417f21-20a8-4424-b4b1-1f07f14f2311"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m11", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{"eqdyn1", ",", 
      RowBox[{
       RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"Coefficient", "[", 
     RowBox[{"eqdyn1", ",", 
      RowBox[{
       RowBox[{"\[Theta]2", "''"}], "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"Coefficient", "[", 
     RowBox[{"eqdyn1", ",", 
      RowBox[{
       RowBox[{"d3", "''"}], "[", "t", "]"}]}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"m22", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{"eqdyn2", ",", 
      RowBox[{
       RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"Coefficient", "[", 
     RowBox[{"eqdyn2", ",", 
      RowBox[{
       RowBox[{"\[Theta]2", "''"}], "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"Coefficient", "[", 
     RowBox[{"eqdyn2", ",", 
      RowBox[{
       RowBox[{"d3", "''"}], "[", "t", "]"}]}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"m33", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{"eqdyn3", ",", 
      RowBox[{
       RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"Coefficient", "[", 
     RowBox[{"eqdyn3", ",", 
      RowBox[{
       RowBox[{"\[Theta]2", "''"}], "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"Coefficient", "[", 
     RowBox[{"eqdyn3", ",", 
      RowBox[{
       RowBox[{"d3", "''"}], "[", "t", "]"}]}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"MM", "=", 
  RowBox[{"{", 
   RowBox[{"m11", ",", "m22", ",", "m33"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.9666003564676356`*^9, 3.966600358134058*^9}, {
  3.966600436271922*^9, 3.9666005578633003`*^9}, {3.966601304569724*^9, 
  3.966601317648841*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"2fd9bd9e-6fbc-4c2f-9aa1-7c9446973aa5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"8.4217875`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.009000000000000001`", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ",", 
   RowBox[{"5.6086`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.0045000000000000005`", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.966600484749982*^9, {3.9666005173588*^9, 3.966600558496604*^9}, 
   3.9666014051099024`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"70ea32e3-a550-4614-bcc7-7a2c963e9f98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"5.1064`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.018`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ")"}]}], ",", 
   "1.2766`", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.966600484749982*^9, {3.9666005173588*^9, 3.966600558496604*^9}, 
   3.966601405125553*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"bd0761f5-fabb-4ce5-ac75-c8cf55d868fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0.0025`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.966600484749982*^9, {3.9666005173588*^9, 3.966600558496604*^9}, 
   3.966601405125553*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"bdd70a49-45f9-46ea-bef7-f27ab85a9aea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"8.4217875`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.009000000000000001`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{"5.6086`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.0045000000000000005`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"5.1064`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.018`", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], ")"}]}], ",", 
     "1.2766`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0.0025`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.966600484749982*^9, {3.9666005173588*^9, 3.966600558496604*^9}, 
   3.9666014051415606`*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"8a099514-2be4-4924-9dfd-e5e82a2aed1f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"temp", "=", 
   RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ";"}], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "3"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "\[LessEqual]", "3"}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "3"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "+=", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"MM", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                RowBox[{"q", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "+", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"MM", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "k"}], "]"}], "]"}], ",", 
                RowBox[{"q", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "-", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"MM", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "j"}], "]"}], "]"}], ",", 
                RowBox[{"q", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ")"}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"q", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", "t"}], "]"}]}]}], ";"}]}],
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}]}], "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{
  RowBox[{"Cor", "=", 
   RowBox[{"Chop", "[", "temp", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6555300922940273`*^9, 3.655530108203874*^9}, {
  3.6555301486109467`*^9, 3.655530163276162*^9}, {3.655530304712208*^9, 
  3.6555303251146393`*^9}, {3.6555306808954363`*^9, 3.655530689411684*^9}, {
  3.655531191710002*^9, 3.655531203759107*^9}, {3.701164355214242*^9, 
  3.7011643707746773`*^9}, {3.9666006586118164`*^9, 3.9666007009040847`*^9}, {
  3.9666007415825987`*^9, 3.9666007865955553`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"c532162c-f765-44ca-99d6-1f1ec8e7b73a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"pe", "/.", "geomparams"}], ")"}], ",", 
    RowBox[{"{", "q", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9666011289762073`*^9, 3.9666011846681023`*^9}, {
  3.9666014271367693`*^9, 3.9666014278833*^9}, {3.9666290315096693`*^9, 
  3.9666290327126675`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"d3e7fd44-79af-483d-9937-bfb359062a9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0.04905`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9666011297951756`*^9, 3.9666011794030437`*^9}, {
   3.9666014052050962`*^9, 3.9666014295535626`*^9}, 3.9666290337298937`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"575b84e4-6f7a-43c3-b438-69b9b967126a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]ddotdes", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"\[Theta]dotdes", ",", "t"}], "]"}], ",", 
     RowBox[{"{", "0", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.96662909581441*^9, 3.9666291235679827`*^9}, {
  3.9666294981065245`*^9, 3.966629503454116*^9}, {3.966629550073118*^9, 
  3.9666295692971992`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"50616d4a-ca3d-4d12-bf10-2ab1e2250471"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MM", ".", "\[Theta]ddotdes"}], "+", 
  RowBox[{"Cor", ".", "dq"}], "+", "G"}]], "Input",
 CellChangeTimes->{{3.9666293920158515`*^9, 3.9666294002586603`*^9}, {
  3.9666296086122847`*^9, 3.966629613175209*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"012c37a6-ebcd-4fc4-b1cf-aac2ce292d53"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}], Short[#, 5]& ], 
   "line" -> 163, "sessionID" -> 20247888492957332417, "byteCount" -> 3064816,
    "size" -> 5, "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.9666294018437853`*^9, 3.966629506715556*^9, 
  3.966629576053249*^9, 3.966629615511052*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"c22ea00e-9bb0-45d9-8da4-04df272d6198"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kpv1", "=", "15000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kp1", "=", 
   RowBox[{"kpv1", "*", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kv1", "=", 
   RowBox[{"2", "*", 
    RowBox[{"Sqrt", "[", "kpv1", "]"}], "*", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Theta]des1", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Theta]1", ",", "\[Theta]2", ",", "0.3"}], "}"}], "/.", 
    "iktrj"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"err1", "=", 
   RowBox[{"\[Theta]des1", "-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]2", "[", "t", "]"}], ",", 
      RowBox[{"d3", "[", "t", "]"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Theta]dotdes1", "=", 
   RowBox[{"D", "[", 
    RowBox[{"\[Theta]des1", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errdot1", "=", 
   RowBox[{"\[Theta]dotdes1", "-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"d3", "'"}], "[", "t", "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]ctau", "=", 
   RowBox[{
    RowBox[{"MM", ".", "\[Theta]ddotdes"}], "+", 
    RowBox[{"Cor", ".", "dq"}], "+", "G", "+", 
    RowBox[{"Kp1", ".", "err1"}], "+", 
    RowBox[{"Kv1", ".", "errdot1"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9666297715328045`*^9, 3.9666298589929976`*^9}, {
  3.9666302822548385`*^9, 3.966630381605666*^9}, {3.966630651134859*^9, 
  3.966630706457694*^9}, {3.9666307456288795`*^9, 3.9666307462029033`*^9}, {
  3.9666307958502455`*^9, 3.96663079604214*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"dcdf41a7-1f2f-432f-8e30-888c49d2a6e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Tau]c", "=", 
   RowBox[{
    RowBox[{"Kp", ".", "err"}], "+", 
    RowBox[{"Kv", ".", "errdot"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqdyn1", ",", "eqdyn2", ",", "eqdyn3"}], "}"}], "==", 
        "\[Tau]ctau"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "0", "]"}], "==", 
        RowBox[{"\[Pi]", "/", "4"}]}], ",", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "0", "]"}], "==", 
        RowBox[{"\[Pi]", "/", "6"}]}], ",", 
       RowBox[{
        RowBox[{"d3", "[", "0", "]"}], "==", "0.1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"d3", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", "\[Theta]2", ",", "d3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "TF"}], "}"}], ",", 
     RowBox[{"Method", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
       "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], ",", 
       RowBox[{"d3", "[", "t", "]"}]}], "}"}], "/.", " ", "s2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "TF"}], "}"}], ",", 
   RowBox[{"PlotStyle", "->", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9666304262092905`*^9, 3.9666305196964245`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"f56d0f7a-8762-42d1-9b26-7e0392970dda"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
hrnlZQZYMZw3CnLk/wHMHvbP
          "]]}, Annotation[#, "Charting`Private`Tag$26143#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ao3J/qVF7A8oFEZ2+e++aeCCm5pHhU6pMNJSByWk1nChy9hC50+FMMpkNrut
sCL7z2t2wLtJGI8dvfUhz4YLgsSR4L0jwnh3s8RA+lYuRH7bVqs8LYwhIWHW
Lju4IDGwzLBdUAT3qihPLNzJBekFf0ecpERwOtzvWJML2Z+H94Vu1xLBide3
Vpns58JS0x/bkvRFEGXWttv4c2G5wE69PiMR3FnG8/MN4sKaaNvu05YiSH1R
a992lOzXFJ3tac4i2LjHcFXceVIf+x/rjbmLYD5TbIPGBS4c0FeiWfiK4GXC
duMX8rl/PF+q+NsREfzvU/3CrdfJ/q3n6wldEUGPU5vb1B5x4f5dP9qGGyLI
nL6/0+IpF1LcOrtvJYigUwczPyiNCxn9DfeXporgrS6H5UKZpL6Fc2i7ikRQ
7MfaV4OlpF5WnO5JHxZBVqFVEL+fC5LT48VTkyIo5BdlocQn+7koKNFagIor
fDdWOI2T822D+44WSSou2vF4TESoE1Z7WX+gLqZiRfiTJersTjh8g5bkspOK
S3YoOp1Y1wmdo7ccaAVUJGovRftkdMJDC8NDbR+oOCv1bHZVbifsiam+kl5O
xYxjCYpqxZ3QrC7yeVsjFW0KylYuru2Er9sOrro3TMUZeXgiOdwJha/tVZZq
ieLswaUSNsZdcMtfsG/jLVEUSTboUK7pgu0596iqiaKokHzOallzFzBFjDnD
KaL4actc7rbOLoi9F+B8K0MU5X6WpVRMdMH5ipbqH1WiKGD+sy5CrRuCNLPe
BAmL4e7lfW9kj3WDXdf+k9eCxfCdXHYpGvTA2pOc51ahYuhsNlupZN4Da2Ra
m8dOiaFYi9lRml0PmFpvMN4dLYZN3k2H6O49oPVYb5jzlDy/T+vMp2s9QPMa
8XnbKkbOOzalbYx8f+k8ub1xnTgGPRlxgM+/YWNnnLaSkgT6n/i9jrjeB5Xa
nfXO6hK4ZWv6u5rkPlh/aOWpBC0JbJAwr+1L7wMbofYa9koJPNNysWFVZR+s
UdE+ytosgSL9/8Y3ifyBFc6lhFi4BHZVlievPPYHFOsndwx3SeDopUKlQu9+
6PvgfqbsBQ3Pr+ssvO7yF3QZ3xZa7pmH+3ddll1wmvy+gdG9rcPzMXhDt+6b
b8OwbsBpXG0HHX1m17N2R45BY7GnoJMOA7uSuWf7rCdhyKJ5wUk9BubJj4Q6
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
9/9jIXXndrkraXTCgVeRnfuchbuHcvrHn9KJmaCr70YyWHgzQuycRTKd+KI/
8o6RxcLhPBNh1UQ68XDIIUc3h4WPB7dML0qgE7ZBirk+71l4p8X+xe0bdEJR
/3RuRDEL+55r5glepxNDgz9zH5ay0OauOyUqjk7cDHya11rBwi9NunuaL9MJ
Xz2J/MlqFl5VTVz58CKdWD14IF+2loWovGrwWBSd4AYYFGxuJPP5co+r/TlS
vwEFhSWdLPyWFhSqRc5fiq7K+589LDzlUxShdIxOfBsIf/+vj4UGehbvJENI
/fvbEMY8FnL008NrDtKJTUvTiB0jLLxQs9noURCdUBuYV3RwnIUhx3zW7Q+g
E2PPg4quTLGw+2h6p/oBOvH5QF3R81kW/jz76nitL53Q89autt8rjcMHioUs
GGR+mDq0IyYy+P50rn5nxnwi72V4gg5FluzHAb6N5zyCar9jwS2qLPouPv2j
2HUesaVX446ghCy2t8U5me+aR/Rwqm5+o8si5Y22nOnGeQTrjty1M0qyqHPl
4iFr43mE37nnF+pNZFG69Fp0huQ8QmHntyNhQbLY/C/3sWq2JLFvNHWk+5As
7lD4R217LUm8vnbi0JYQWeT7/pFIeC5JrKtSCV58ShZ/fehapPxQkji0xu9A
zWVZdLn+lmsTI0lU6Ah4qD+VRVO/wtVLPSWJE4JamyvbSHst90qTpCWJbita
4+KfsghlMn4dUpLE5gv9e852ymIs52bIIpokoS6VHmj0RxZHL1TLFQhKEpWK
y688mJDFr169FeqDNELJ2Lz6MEsOb8YGr+wrpxEXTig7fJGVw5E8sZYTH2kE
v1CgXXOBHPZIER6sYhrxyfrDQLuKHA7I0G9uz6ERQdts5tnqyqHevuU5aqk0
ojhgq/1CWzl0eaBRIx5FI3QyDOtD7OWwpGn5FrFzNOLmqLRz7SY5rH22oWT+
aRrhF/bdL8pBDneKhC9YHkIjpC85X+Z5yGGfbvXPTm8ase/xvvLSU3L4LX9p
J2U9jaj5vW6rSrgcRkXuGIpfRyNMdTSbj0fIId2g6KG+FY2QevOnVy9aDmVd
tAoumNGId0SQ+N07cth6tdW4SJ9GSLQetwnIlEPWzOWVZ+RphFHIf/OuZMvh
dmWWpKAcjdjLbKxNz5VDe4bVYIw0ed5mhQuPkMOY1n2xlVI0opProcYskcNC
v9MPTs0j7Z2+1mPwSQ77E0L9zWikv28Hgw9XyWFXlcuvn1QacW2z0sobNXL4
PO19+ydhGlHwx37mbZ0cPkqpM88TohG/I08Uffsmhwl+3dr5AmT8as8ix5vk
MDq1srr8nwQBBY3r2W1yyC2u39QzI0Hs3ynKMOmQw2mX6z/PyYkTN4dXfNvF
lcNZpeBSoX2CRFGsZ8Lxbjn8/PfcgQn74ff9mtfdEnrlcEo+gKHBanrPLi1a
lN8vh8dXaybUmX4FS7ehvtZBOfQpvbNLMLkXAqaVXs3y5XDFWmetmuRhuHtz
wxGlMTlUeHP94GbpSShdFmYKk3KYdNO5qX7/LAxVPpvbMyOHM8cfKvzxF0BF
n6aSM3Ny2Nj5JrHtsyDaUMQuJQuxccvpvl27W4TwUKLRpmIRNiYuVd+/6DUF
E028pLlibFzf6dFv4SiM5fXXmyiSbKRvyB898V0YxwKLE9Wl2FiXkl1UYSKC
qjSehzWTjZ8ya86mnRdB+yfKmvtk2GjzWcjPuUAEQy02/o1ks5HlEzGq9FsE
U1rD3jxVYGPWZYlcNzEqfglJCy1TYuPnkGNdP1WoOMVsNutVZeOsEb+1zpBK
zjExisQiNp7TG3Plr6HiFtuVZVpL2KgaLa57exMVwzq9YtZrs/HI8/6FNU5U
rFvwQS5mGRtDen13dQZS8d9bXuuL5WxsTBwxyT1ORa0tKg+rV7LRr2aLp0Yk
Fc9EndShm7ORKpZcbJ1Exedqz3n6FmykdP2LF3hBxe8FzVlbrNjIO1YjEZhH
Rd2RlRbX7dh4PL2gtreJik5X9lEzN7Cxb9fszJNeKkZo3aio38xGs4Sq5acm
qdjqxt8h68hGC++6LcVsURSbUVFY6cRGx/8O6TdoiKLhrU0dji5s/JiWuXWz
kSheqnq+/44HGwfOb6T/2SyKWT4tern7SPspVxdWOIviT4rEaLMvG1386qVu
eIuiZJJx7vQBNjJkUhavCBZFY1Pv04pBbHxtdi/l3jFR9Gi4YWV2iI0JCd+I
ojOiGBtUIu56lI1S4n5nkyJFMZc2XH3qGBtF64vDV1wWxa4nqvFJYWxcjhde
RsWKYv/5n5OUM2z8G3DgV36cKPLdk/f4nGOjmPkHl5irojiJe0srI9k4xeJb
SZIsoKyqvewSG1UYV4M2XxFF6mxH3I0Y0n6qTMmhaFGc1/JgbDKOjRfp385d
uyCK0jluzq7xpN6WPn1Rfk4UF9xSKS6+xcZOT57DqlOiqHqkQ0MjgY2nbuUw
hUNFccm2BzGXE9k4b3P+Xisy3hVSKru2P2aj6cfjO564i+LmKOWhrgw2rnQs
T5q0FEVHrx877LLYKDQ4bR29WhRdLZPyXuaw0VgnK8JlhSh6qpJviwVs7PEv
e35CVxT95pSiQgg2zomHbeOT9TnY1t7f8oHsD84hr3JVUQzNS9yKn9hoFFG9
XEJRFE/fcX2XUs7GsSMbbr2VFcXIECUl8WqSrR/QqhmiGLOj/Zz/VzZWXSjq
2jpPFOMNE3u/1rNxKHjyjIW4KN5luG4yamSj4ao1R2+IiGLy4MK3d1vYGG+Q
32AjJIqpVW0L5trZSATP7d0+R8WXaffPePxi48iZhZXpM1R8e9Gl+1MXG7cf
thzcMkXFfO+F9jq9bPR/KEBbNkHFD9Ztr+P6Sf2JbJ9eM0bFcs59udFBNmrT
cv1PjpD6/qHILRgj63njbPkaHhXbC1pt1KbYGPWrpjpnkIqdCfdeRs6ycZlN
SMOyv1TkOyoe3yQsjxeMOn8J/aHi5IrWH29E5fHfs72F9qT+BaTvWbNp8jhv
5xrfYz1UpPJ3p4XNl8fwtN4D57qoOK9GgfGTIY+LVt423celovTLlqPWMvKY
pPxBR+knFRdEJ7T+x5ZHSS/F86ntVFxio5B6UFkelyX55ywl+01vccu872ry
2BTWZq/xjYpGwgmHVi2Wxzm50vihWipaEgtAeKk8vnSje45XUNEusTnFR18e
Z/I2/TIuo+LmsLsSVYby2HnTvmVLCRVdjRd8u2FK2g/IfiSbT0Uv2eZVU2by
eMdxmdXnbCoeGLmT7Gohj8bFfc1ub6h47JW8v4aNPB5f1/1iwzMqxi+RF87Z
IY9/rVvvnb1FRWfXxU+5O+XxbspCNfp1KqrHG9rNd5ZHJaP28fuxVMyc2xDn
4S6P2/bemi2MoGL9t3DF+YHyeI/2er3ZYSqyIvqXe1yQx6qMhMCnW6l47ed7
r3l58shWbd/SzqBi3N19n/aqLMCPmvfOeZDz1inepVqyZwFuVFgpquIpjBNW
jyeTChUwIsogQECTgtyuNaHFUYo4p3SKOSomhA/NlilU7V2I53+fDGhpEcAX
EUcY3kuVUE9i8bsvSXMQtcNjPWVUCXlPnpeKp8/Citbk/6KqlDH3vtW/suxp
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

          "]]}, Annotation[#, "Charting`Private`Tag$26143#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$26143#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\[Theta]1", "\[Theta]2"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9666304990634413`*^9, 3.966630520855605*^9}, 
   3.96663065400196*^9, {3.966630685121995*^9, 3.966630710238076*^9}, 
   3.966630755277782*^9, 3.966630799190689*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"a4d4f61a-66aa-4e6d-8879-855ccc5b3237"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"solList1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Inner", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]1", ",", "\[Theta]2", ",", "d3", ",", "time"}], 
         "}"}], "]"}], ",", "#", ",", "List"}], "]"}], "&"}], "/@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], ",", 
          RowBox[{"d3", "[", "t", "]"}], ",", "t"}], "}"}], "/.", " ", 
        RowBox[{"s2", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "TF", ",", "0.01"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"cirpoints1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xpos", ",", "ypos"}], "}"}], "/.", "solList1"}], "/.", 
    "geomparams"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot11", "=", 
  RowBox[{"ListPlot", "[", "cirpoints1", "]"}]}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"plot11", ",", "plot2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.966630558585183*^9, 3.966630630546855*^9}, 
   3.9666306701082325`*^9, 3.966636936931566*^9},
 CellLabel->
  "In[300]:=",ExpressionUUID->"f4bf2bc5-3406-4ebe-aa27-a9e144ceaf4d"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
xpROkw==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.6005496205768817, 0.7416945941331403}, {-0.3017125324372543,
    0.7999980299579721}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.966630634588108*^9, 3.966630712151151*^9}, 
   3.966630763693709*^9, 3.966630801430847*^9, 3.9666369374762697`*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"b7f1eacc-e5d6-4c4f-ab1e-e3e930d1b52b"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
xpROkw==
      "]]}, {{}, {}}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
05rhGc4PalwOuSlX3MzJFy6KFw5IqW/m5A+P2Pq/Hupq5uQTm3KiXvaxmzn5
RTr3YZ3AqWaQxPnGHjd+6+/zKRCF848OtyPJIkIU+IXzkWZS4meG11DgOs5P
9gTPo3soUP7lK4tXK5arUzj5y/NDXoJlOhQoxfnMQqPHJ90MKZz85hvm1DDz
BIWT70xb9j6Y35bCyX8a3GNIsK5QOPnQFeuE7NzcKZz8qPmnAe1SXwonX2rb
oONTEkjh5E8vbTaaux5B4eRTH9w5+bj/FYWTX80qH+Ge/47Cybc+SMhQ6cqi
QAPOv+p3+X63K6Rw8rFcvg5Sbyoo8B3nZxWigx7G1lM4+Vp59928h1sonPzt
1musK6ndFE4+19JdJKpigMLJ7+6kX7UKGqJw8r1cW8seC45ROPlf9JvGozNF
4eSDc+goQn6GAsM4P6z82kaqkvtfvvjE7kFnEV4qsU/9zR/zL3E6v0rgXz5Z
XEO9tWHZv/xyOfetp9tX/Ms3m+s+u2kq9i///Ox39ymZNf/y0Z/HUsWTpf7l
p5mu7r496//lq/12pF2rkP2Xv76nVI5Oyf/LZ2dEKmu/2/Qvv71B4Xr9m83/
8t21W4W0LLb8y3+3fb9vV6j8Lx9+X9RiPXnrv/y4z9qlB8JU/uXLC4Q2ZS7e
RoX/8udbsX7+fz1EWf8=
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.6005496205768817, 0.7416945941331403}, {-0.3017125324372543,
    0.7999980299579721}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.966630634588108*^9, 3.966630712151151*^9}, 
   3.966630763693709*^9, 3.966630801430847*^9, 3.9666369374926877`*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"67fc07ba-14c8-42fb-bf90-d1cb11b4b497"]
}, Open  ]]
},
WindowSize->{949, 473},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.1 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (August 22, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f5948d30-7f76-b84f-bbb2-f6d10b11f355"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[1460, 33, 6351, 167, 325, "Input",ExpressionUUID->"61b24589-24c7-0742-a6c5-29392fa43291"],
Cell[CellGroupData[{
Cell[7836, 204, 9259, 218, 430, "Input",ExpressionUUID->"0256c58a-5f09-f64c-bc06-451e639a8311"],
Cell[17098, 424, 1404, 27, 35, "Output",ExpressionUUID->"a813cc44-0ba5-4b48-9f35-a54f5603b66e"]
}, Open  ]],
Cell[18517, 454, 9127, 217, 372, "Input",ExpressionUUID->"a2d3814a-4f50-e742-aef9-066e52dd6385"],
Cell[CellGroupData[{
Cell[27669, 675, 1379, 34, 115, "Input",ExpressionUUID->"585d5a12-baab-7f49-b531-7127c425a051"],
Cell[29051, 711, 1462, 20, 35, "Output",ExpressionUUID->"7d61edd1-8e37-4b85-aa59-bf122d4f36b1"],
Cell[30516, 733, 1478, 20, 35, "Output",ExpressionUUID->"608bd4f3-7f9b-4ece-873f-fd191ecacba1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32031, 758, 5593, 142, 272, "Input",ExpressionUUID->"98d3e502-f4e5-bc4f-8a2c-ce0ebeff5846"],
Cell[37627, 902, 3363, 67, 293, "Output",ExpressionUUID->"c0f8adff-ee8f-4b7c-b590-8254ff0b27ef"],
Cell[40993, 971, 5977, 122, 324, "Output",ExpressionUUID->"b5a29d72-12fd-4383-aa34-5435b8eaf395"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47007, 1098, 21341, 565, 1078, "Input",ExpressionUUID->"e988ee22-d207-464e-9fcf-6d072dc7345a"],
Cell[68351, 1665, 62483, 1098, 257, "Output",ExpressionUUID->"109ddef3-d10b-47b1-b6f8-fb2fe6e892f8"],
Cell[130837, 2765, 10826, 212, 249, "Output",ExpressionUUID->"75faa283-a3e7-41be-b8b0-4cc8ac5b6172"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141700, 2982, 8396, 219, 521, "Input",ExpressionUUID->"9f160ca8-142c-bb47-bbec-de5c78aeea9c"],
Cell[150099, 3203, 1091, 23, 52, "Output",ExpressionUUID->"ac3b579f-0ee6-43a6-a0db-23a088eb98f3"],
Cell[151193, 3228, 1420, 32, 55, "Output",ExpressionUUID->"e70f15d2-4496-4147-978b-ecf14bfd28e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152650, 3265, 7098, 213, 492, "Input",ExpressionUUID->"5d20443a-811c-0c44-877b-16d47b5701ac"],
Cell[159751, 3480, 14855, 260, 252, "Output",ExpressionUUID->"983b74bf-a4bf-4423-b68b-5aa938cef8db"],
Cell[174609, 3742, 14967, 262, 252, "Output",ExpressionUUID->"08ffd117-1ac1-4fb8-b62f-6f5efe305e1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189613, 4009, 258, 6, 31, "Input",ExpressionUUID->"702f4e08-c5d7-4af8-8ca0-15093d36e6ab"],
Cell[189874, 4017, 227, 4, 35, "Output",ExpressionUUID->"a0cc9777-3e66-4017-8e56-3083de3ae010"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190138, 4026, 5354, 154, 408, "Input",ExpressionUUID->"b9abc898-f00d-db42-a821-ab2f816479d3"],
Cell[195495, 4182, 35018, 626, 260, "Output",ExpressionUUID->"368fd9ce-40c8-4736-8269-2f57efbcd32a"],
Cell[230516, 4810, 22519, 385, 263, "Output",ExpressionUUID->"2624b6cc-6459-49bc-b22d-11ac77e7736b"],
Cell[253038, 5197, 40461, 680, 263, "Output",ExpressionUUID->"7b417f21-20a8-4424-b4b1-1f07f14f2311"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293536, 5882, 1899, 56, 94, "Input",ExpressionUUID->"2fd9bd9e-6fbc-4c2f-9aa1-7c9446973aa5"],
Cell[295438, 5940, 626, 16, 35, "Output",ExpressionUUID->"70ea32e3-a550-4614-bcc7-7a2c963e9f98"],
Cell[296067, 5958, 524, 15, 52, "Output",ExpressionUUID->"bd0761f5-fabb-4ce5-ac75-c8cf55d868fe"],
Cell[296594, 5975, 287, 7, 35, "Output",ExpressionUUID->"bdd70a49-45f9-46ea-bef7-f27ab85a9aea"],
Cell[296884, 5984, 1085, 30, 83, "Output",ExpressionUUID->"8a099514-2be4-4924-9dfd-e5e82a2aed1f"]
}, Open  ]],
Cell[297984, 6017, 2669, 66, 199, "Input",ExpressionUUID->"c532162c-f765-44ca-99d6-1f1ec8e7b73a"],
Cell[CellGroupData[{
Cell[300678, 6087, 443, 11, 31, "Input",ExpressionUUID->"d3e7fd44-79af-483d-9937-bfb359062a9c"],
Cell[301124, 6100, 321, 6, 35, "Output",ExpressionUUID->"575b84e4-6f7a-43c3-b438-69b9b967126a"]
}, Open  ]],
Cell[301460, 6109, 487, 12, 31, "Input",ExpressionUUID->"50616d4a-ca3d-4d12-bf10-2ab1e2250471"],
Cell[CellGroupData[{
Cell[301972, 6125, 327, 7, 31, "Input",ExpressionUUID->"012c37a6-ebcd-4fc4-b1cf-aac2ce292d53"],
Cell[302302, 6134, 593, 11, 93, "Output",ExpressionUUID->"c22ea00e-9bb0-45d9-8da4-04df272d6198"]
}, Open  ]],
Cell[302910, 6148, 1960, 55, 178, "Input",ExpressionUUID->"dcdf41a7-1f2f-432f-8e30-888c49d2a6e0"],
Cell[CellGroupData[{
Cell[304895, 6207, 2095, 59, 136, "Input",ExpressionUUID->"f56d0f7a-8762-42d1-9b26-7e0392970dda"],
Cell[306993, 6268, 40065, 713, 260, "Output",ExpressionUUID->"a4d4f61a-66aa-4e6d-8879-855ccc5b3237"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347095, 6986, 1402, 39, 115, "Input",ExpressionUUID->"f4bf2bc5-3406-4ebe-aa27-a9e144ceaf4d"],
Cell[348500, 7027, 21987, 377, 262, "Output",ExpressionUUID->"b7f1eacc-e5d6-4c4f-ab1e-e3e930d1b52b"],
Cell[370490, 7406, 39929, 672, 262, "Output",ExpressionUUID->"67fc07ba-14c8-42fb-bf90-d1cb11b4b497"]
}, Open  ]]
}
]
*)

